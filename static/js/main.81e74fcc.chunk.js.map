{"version":3,"sources":["restapi/players-profiles/PlayersProfilesRestApi.ts","components/atoms/Shared/Centered/Centered.tsx","components/atoms/constants/ThemeMUI.tsx","components/organisms/Footer/styles.js","components/organisms/Footer/Footer.tsx","components/atoms/Shared/VerticalSpace/VerticalSpace.tsx","components/molecules/CardTitle/CardTitle.tsx","components/atoms/constants/sizes.tsx","components/templates/Menu/Menu.tsx","components/atoms/constants/routerPaths.tsx","components/pages/HomeMenu/HomeMenu.tsx","components/atoms/constants/names.tsx","components/organisms/Header/styles.js","components/atoms/constants/imgPaths.tsx","components/organisms/Header/Header.tsx","restapi/tournament-registrations/TournamentRegistrationsRestAPI.ts","components/organisms/Notification/styles.js","components/organisms/Notification/Notification.tsx","components/pages/TournamentRegistrations/styles.js","components/organisms/TournamentRegistrationsComponents/Context.ts","restapi/tournament-start/TournamentStart.ts","components/organisms/TournamentRegistrationsComponents/RegistrationsActionDrawer.tsx","components/organisms/TournamentRegistrationsComponents/TopNavBar.tsx","components/idGenerator/EntityIdGenerator.ts","components/organisms/CreatePlayerProfileForm/CreatePlayerProfileForm.tsx","components/atoms/MatchStatus.tsx","components/organisms/TournamentRegistrationsComponents/CreatePlayerProfileDrawer.tsx","components/organisms/TournamentRegistrationsComponents/PlayerNotFound.tsx","components/organisms/TournamentRegistrationsComponents/PlayersListItem.tsx","components/organisms/TournamentRegistrationsComponents/PlayersList.tsx","components/pages/TournamentRegistrations/TournamentRegistrations.tsx","components/pages/Routes/TournamentRegistrationsRoutes.tsx","components/atoms/Background/StyledBackground.tsx","components/molecules/MatchTeam/MatchTeam.tsx","components/molecules/MatchWinnerDeterminationDialog/MatchWinnerDeterminationDialog.tsx","components/molecules/MatchItem/MatchItem.tsx","restapi/tournament-matches-list/TournamentMatchesListRestAPI.ts","restapi/tournament-teams-list/TournamentTeamsListRestApi.ts","restapi/match-details/MatchDetailsRestAPI.ts","components/organisms/MatchesList/MatchesList.tsx","components/pages/Routes/MatchesListRoutes.tsx","components/atoms/Shared/ArrowBack/ArrowBackButton.tsx","components/molecules/CardTitleWithNavButton/CardTitleWithNavButton.tsx","components/atoms/Shared/TextButton/TextButton.tsx","components/molecules/TournamentCard/TournamentCard.tsx","restapi/tournament-details/TournamentDetailsRestApi.ts","components/organisms/TournamentsCardsGallery/TournamentsCardsGallery.tsx","components/molecules/NewTournamentButton/NewTournamentButton.tsx","components/pages/TournamentsList/TournamentsList.tsx","components/pages/TourDeFoos/TourDeFoos.tsx","index.tsx","components/atoms/constants/apiPaths.tsx","restapi/players-profiles/index.ts"],"names":["defaultConfig","baseUrl","PATH_BASE_URL","UserProfileRestApi","config","currentConfig","process","getPlayersProfiles","axios","get","then","response","data","getPlayerProfile","playerId","postPlayersProfile","playerProfile","post","Centered","styled","div","THEME","createMuiTheme","palette","primary","main","grey","contrastText","secondary","useStyles","makeStyles","theme","footer","boxSizing","position","bottom","width","padding","color","backgroundColor","Footer","text","classes","Box","className","data-testid","Typography","variant","align","VerticalSpace","props","style","minHeight","height","CardTitle","component","title","otherProps","MIN_CARD_COMPONENT_WIDTH","Menu","StartMenuCard","CardContent","MenuButtonsList","menuButtonsList","Card","display","minWidth","paddingTop","paddingBottom","List","map","item","index","MenuButton","textName","onClick","onLink","to","Button","root","PATH_FOR_TOURNAMENTS_SELECTION_VIEW","PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW","PATH_FOR_PLAYERS_PROFILES_VIEW","PATH_FOR_PLAYER_MATCHES_VIEW","homeMenuButtonsListProps","console","log","HomeMenu","header","justifyContent","logo","maxHeight","letterSpacing","PATH_FOR_IMAGES","Header","AppBar","Toolbar","flexGrow","src","alt","TournamentRegistrationsRestApi","getRegisteredPlayersIds","tournamentId","res","postPlayersForTournament","body","closeTournamentRegistration","params","getAllTournamentsRegistrations","require","colors","Notification","isError","Snackbar","open","autoHideDuration","onClose","handleClose","anchorOrigin","vertical","horizontal","Alert","severity","icon","tournamentRegistrationsContext","openCreatePlayerProfileForm","toggleOpenFormState","onPlayerProfileCreated","name","surname","registerPlayer","a","TournamentRegistrationsContext","createContext","TournamentStartRestApi","startTournament","RegistrationsActionDrawer","useContext","useState","drawerOpened","setDrawerOpened","openAlert","setOpenAlert","textAlert","setTextAlert","useEffect","openDrawer","history","useHistory","toggleDrawer","returnToPrevState","closeRegistrationsAndStartTournament","goBack","errorMessage","message","Drawer","anchor","Grid","container","direction","justify","alignItems","event","reason","TopNavBar","setOpenDrawer","IconButton","textAlign","EntityIdGenerator","uuid","validationSchema","yup","required","email","phone","min","CreatePlayerProfileForm","MatchStatus","formik","useFormik","initialValues","onSubmit","values","generate","firstName","lastName","phoneNumber","emailAddress","onDrawerClose","handleSubmit","TextField","id","value","label","onChange","handleChange","error","touched","Boolean","errors","helperText","type","CreatePlayerProfileDrawer","PlayerNotFound","AlertTitle","PlayersListItem","ListItem","ListItemAvatar","Avatar","SupervisedUserCircle","ListItemText","player","ListItemSecondaryAction","isRegistered","aria-label","edge","AddCircleOutline","PlayersList","players","length","registeredPlayersIds","includes","TournamentRegistrations","searchInput","useRef","undefined","availablePlayers","setAvailablePlayers","filteredPlayers","setFilteredPlayers","setRegisteredPlayersIds","setOpenCreatePlayerProfileForm","reloadRegisteredPlayers","onNotificationOpen","playerProfilesList","items","tournamentRegistrations","refreshPlayersAndResetSearchingInput","current","isLoading","Provider","prevValue","CircularProgress","FormControl","InputLabel","htmlFor","OutlinedInput","inputRef","trim","filter","onPlayerSearch","target","endAdornment","Search","labelWidth","TournamentRegistrationsRoute","match","useRouteMatch","StyledBackground","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","top","left","zIndex","background","paper","teamItem","paddingLeft","avatar","avatarColor","getContrastText","inline","waitingForTeam","MatchTeam","player1","player2","isWinnerTeam","teamId","matchStatus","isMatchWaitingForPlayers","NO_ONE_TEAM","isWaitingForThisTeam","WaitingForTeam","player1Text","player2Text","playersNameText","avatarSymbol","toUpperCase","playersTitle","isWaitingForEnemyTeamDescription","WaitingForEnemyTeamDescription","isStartedMatchDescription","STARTED","ReadyToStartMatchDescription","isFinishedMatchDescription","FINISHED","FinishedMatchDescription","Transition","React","forwardRef","ref","Slide","FullParentButton","withStyles","opacity","MatchWinnerDeterminationDialog","agreeCallback","isOpen","teamPlayersNames","setOpen","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","TeamHoverButton","margin","fontSize","success","light","cursor","transition","MatchTeamWrapper","StyledAccordionDetails","AccordionDetails","flexDirection","default","StyledAvatar","MatchItemWrapper","MatchItem","expanded","handleChangeExpander","level","matchId","matchNumber","onClickTeam","team1","team2","winnerTeamId","isWinnerTeam1","isWinnerTeam2","agreeDialogCallback","teamName","elevation","Accordion","AccordionSummary","expandIcon","aria-controls","Fragment","firstPlayerName","secondPlayerName","TeamHoverButtonComponent","MatchDetailsRestAPI","getTournamentTeamsList","postMatchWinner","winnerPlayerId","winnerId","StyledMatchesList","MatchesList","setExpanded","tournamentMatchesListDto","setTournamentMatchesListDto","matchesDetailsListDto","setMatchesDetailsListDto","tournamentTeamsListDto","setTournamentTeamsListDto","playersProfilesListDto","setPlayersProfilesListDto","matchesList","setMatchesList","reloadAllList","Promise","all","queue","tournamentMatchesItem","getMatchDetailsDto","matchesDetailsDto","getTournamentTeamsListDto","tournamentPlayersIds","firstTeamPlayer","secondTeamPlayer","reduce","acc","teamPlayers","concat","getPlayerProfileDto","playersProfilesList","setPlayersProfilesListDtoIntoState","matchList","returnMatchList","panel","isExpanded","TournamentMatchesListRestAPI","returnMatchItem","tableNumber","tournamentMatchesList","matchesDetailsList","tournamentTeamsList","status","team1Id","team2Id","findMatchId","findTeamPlayersNames","PlayerInTeam","returnPlayerName","playerTeamId","playerInTeam","PartOfName","FirstName","find","partOfName","firstTeam","First","Second","secondTeam","findLevel","NO_TABLE","NO_TEAMS","STATUS_NOT_EXIST","setMatchWinner","matchDetails","findWinnerId","firstMatchSideId","secondMatchSideId","TournamentTeamsListRestApi","teamsList","MatchesListRoute","ArrowBackButton","push","PageTitleBox","CardTitleWithNavButton","xs","TextButton","textDecoration","size","fontWeight","maxWidth","media","cardActions","TournamentCard","tournamentName","registrationStatus","CardMedia","image","gutterBottom","CardActions","disableSpacing","loadedTournamentsCards","tournamentsRegistrationsDetailsList","createStyles","flexWrap","gridList","transform","webkitBoxShadow","borderRadius","StyledWrapper","TournamentCardsGallery","tournamentsRegistrations","setTournamentsRegistrations","tournamentsDetails","setTournamentsDetails","getAllTournamentsDetails","TournamentDetailsRestApi","tournamentsWithDetailsList","tournament","i","Object","assign","GridList","cols","cellHeight","card","GridListTile","marginRight","link","fab","right","paddingRight","NewTournamentButton","Fab","Add","TournamentsList","TourDeFoos","spacing","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81e74fcc.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { PlayerProfilesListDto } from \"./PlayerProfilesListDto\";\nimport { PlayerProfileDto } from \"./PlayerProfileDto\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\n\nexport type UserProfilesRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: UserProfilesRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const UserProfileRestApi = (\n  config?: Partial<UserProfilesRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getPlayersProfiles(): Promise<PlayerProfilesListDto> {\n      return axios\n        .get<PlayerProfilesListDto>(`${currentConfig.baseUrl}/players-profiles`)\n        .then((response) => response.data);\n    },\n\n    getPlayerProfile(playerId: string): Promise<PlayerProfileDto> {\n      return axios\n        .get<PlayerProfileDto>(\n          `${currentConfig.baseUrl}/players-profiles/${playerId}`\n        )\n        .then((response) => response.data);\n    },\n\n    async postPlayersProfile(playerProfile: PlayerProfileDto): Promise<void> {\n      await axios.post<PlayerProfileDto>(\n        `${currentConfig.baseUrl}/players-profiles`,\n        playerProfile\n      );\n    },\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Centered = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\n\nexport const THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[800],\n      contrastText: \"#E3E152\",\n    },\n    secondary: {\n      main: \"#FFD100\",\n      contrastText: \"#000000\",\n    },\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        boxSizing: 'border-box',\n        position: 'absolute',\n        bottom: '0',\n        width: '100%',\n        padding: '10px 0',\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default useStyles;","import { Typography, Box } from '@material-ui/core';\nimport useStyles from './styles'\n\n\nconst Footer = ({text=`Copyright \\u00a9 TourDeFoos 2021`}) => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.footer} data-testid=\"footer\">\n            <Typography variant='body2' align='center'>\n            {text}\n            </Typography>\n        </Box>\n    )\n}\n\nexport default Footer;","import React from \"react\";\n\nexport const VerticalSpace = (props: { height: string | number }) => (\n  <div style={{ minHeight: props.height }} />\n);\n","import React from 'react';\nimport {Typography,} from \"@material-ui/core\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\"\nimport {Centered} from \"../../atoms/Shared/Centered\";\nimport styled from \"styled-components\";\n\nexport type CardTitleProps = {\n    readonly title: string;\n};\n\nconst CardTitle = (props: CardTitleProps) => (\n    <>\n        <Centered>\n            <Typography component=\"h5\" variant=\"h5\">\n                {props.title}\n            </Typography>\n            <VerticalSpace height=\"2rem\"/>\n        </Centered>\n    </>\n);\n\nexport default styled(({...otherProps}) => (\n    <CardTitle {...otherProps}   />\n))`\n     marginBottom: \"20px\",\n`;\n","export  const MIN_CARD_COMPONENT_WIDTH : string = \"300px\";","import React from 'react';\nimport {Button, Card, CardContent, List, makeStyles,} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport CardTitle from \"../../molecules/CardTitle/CardTitle\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\";\nimport {Centered} from \"../../atoms/Shared/Centered\";\nimport {Link} from \"react-router-dom\";\nimport {MIN_CARD_COMPONENT_WIDTH} from \"../../atoms/constants/sizes\";\n\ntype MenuButtonsProps = {\n    readonly textName: string;\n    readonly onClick: () => void;\n    readonly onLink: string;\n};\n\ntype MenuComponentProps = {\n    readonly title: string;\n    readonly menuButtonsList: MenuButtonsProps[];\n};\n\nexport const Menu = (props: MenuComponentProps) => (\n    <StartMenuCard>\n        <CardContent>\n            <Centered>\n                <CardTitle title={props.title}/>\n                {MenuButtonsList(props.menuButtonsList)}\n            </Centered>\n        </CardContent>\n    </StartMenuCard>\n);\n\nconst StartMenuCard = styled(Card)({\n    display: \"block\",\n    boxSizing: \"border-box\",\n    minWidth: MIN_CARD_COMPONENT_WIDTH,\n    paddingTop: \"40px\",\n    paddingBottom: \"40px\",\n});\n\nconst MenuButtonsList = (props: MenuButtonsProps[]) => (\n    <List>\n        <Centered>\n            {(props.map((item, index) => (\n                <li key={index}>\n                    <MenuButton textName={item.textName} onClick={item.onClick} onLink={item.onLink}/>\n                    <VerticalSpace height=\"1rem\"/>\n                </li>\n            )))\n            }\n        </Centered>\n    </List>\n)\n\nfunction MenuButton({textName, onClick, onLink}: MenuButtonsProps) {\n    const classes = useStyles();\n    return (\n        <>\n            {onLink\n            ?\n            <Link to={onLink}>\n            <Button variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onClick}\n                    className={classes.root}\n            >\n                {textName}\n            </Button>\n            </Link>\n            :\n                <Button variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onClick}\n                        className={classes.root}\n                >\n                    {textName}\n                </Button>\n            }\n        </>\n    )\n}\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"250px\",\n    },\n});\n","export  const PATH_FOR_HOME_VIEW : string = \"/\";\nexport const PATH_FOR_LOGIN_VIEW : string = \"/login\";\nexport  const PATH_FOR_TOURNAMENTS_SELECTION_VIEW : string = \"/tournaments-selection\";\nexport  const PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW : string = \"/new-tournament\";\nexport  const PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW : string = \"/tournament-registration\";\nexport  const PATH_FOR_PLAYERS_PROFILES_VIEW : string = \"/players-profiles\";\nexport  const PATH_FOR_PLAYER_PROFILE_CREATION_VIEW : string = \"/new-player-profiles\";\nexport  const PATH_FOR_PLAYER_MATCHES_VIEW : string = \"/tournament/:tournamentId/matches\";\n\n","import React from \"react\";\nimport { Menu } from \"../../templates/Menu\";\nimport {PATH_FOR_PLAYERS_PROFILES_VIEW, PATH_FOR_TOURNAMENTS_SELECTION_VIEW} from \"../../atoms/constants/routerPaths\";\nimport {APP_NAME} from \"../../atoms/constants/names\";\n\nconst homeMenuButtonsListProps = [\n  {\n    textName: \"Turniej\",\n    onClick: () => {\n      console.log(\"Menu button was clicked!\");\n    },\n    onLink: PATH_FOR_TOURNAMENTS_SELECTION_VIEW,\n  },\n  {\n    textName: \"Zawodnicy\",\n    onClick: () => {\n      console.log(\"Menu button was clicked!\");\n    },\n    onLink: PATH_FOR_PLAYERS_PROFILES_VIEW,\n  },\n];\n\nexport const HomeMenu = () => (\n  <>\n    <Menu title={APP_NAME} menuButtonsList={homeMenuButtonsListProps} />\n  </>\n);","const APP_NAME : string = \"TourDeFoos\";\n\nexport {APP_NAME};","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    boxSizing: \"border-box\",\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    width: \"100%\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    maxHeight: \"50px\",\n  },\n  title: {\n    letterSpacing: \"0.15px\",\n    padding: \"5px\",\n  },\n}));\n\nexport default useStyles;\n","export const PATH_FOR_IMAGES: string = \"/img\";\n","import { Typography, Box, Toolbar, AppBar } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport React from \"react\";\nimport {PATH_FOR_IMAGES} from \"../../atoms/constants/imgPaths\";\n\nconst Header = ({ text = \"Wrocławski Klub Piłki Stołowej\" }) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.header} data-testid=\"header\">\n        <Box flexGrow={1}>\n          <img\n            src={`${PATH_FOR_IMAGES}/logo.png`}\n            alt=\"logo\"\n            className={classes.logo}\n          />\n        </Box>\n        <Box flexGrow={2}>\n          <Centered>\n            <Typography variant=\"h6\" className={classes.title}>\n              {text}\n            </Typography>\n          </Centered>\n        </Box>\n        <Box flexGrow={1} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport { TournamentRegistrationsDto } from \"./TournamentRegistrationsDto\";\nimport {TournamentRegistrationsListDto} from \"./TournamentRegistrationsListDto\";\n\nexport type TournamentRegistrationsRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: TournamentRegistrationsRestApiConfig = {\n  baseUrl: \"http://localhost:5000/rest-api\",\n};\n\nexport const TournamentRegistrationsRestApi = (\n  config?: Partial<TournamentRegistrationsRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getRegisteredPlayersIds(\n      tournamentId: string\n    ): Promise<TournamentRegistrationsDto> {\n      return axios\n        .get<TournamentRegistrationsDto>(\n          `${currentConfig.baseUrl}/tournament-registrations/${tournamentId}`\n        )\n        .then((res) => res.data);\n    },\n    async postPlayersForTournament(body: {\n      tournamentId: string;\n      playerId: string;\n    }): Promise<void> {\n      await axios.post(\n        `${currentConfig.baseUrl}/tournament-registrations/${body.tournamentId}/players`,\n        body\n      );\n    },\n    async closeTournamentRegistration(tournamentId: string): Promise<void> {\n      await axios.post(\n        `${currentConfig.baseUrl}/tournament-registrations/${tournamentId}/close`,\n        null,\n        { params: { tournamentId } }\n      );\n    },\n    getAllTournamentsRegistrations(): Promise<TournamentRegistrationsListDto> {\n      return axios\n          .get<TournamentRegistrationsListDto>(\n              `${currentConfig.baseUrl}/tournament-registrations/`\n          )\n          .then(res => res.data);\n    }\n  };\n};\n","const { makeStyles } = require(\"@material-ui/core\");\n\nconst useStyles = makeStyles((theme) => ({\n  colors: {\n    color: \"#000000 !important\",\n    backgroundColor: \"#FFB400 !important\",\n  },\n}));\n\nexport default useStyles;\n","import useStyles from \"./styles\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst Notification = (props: {\n  text: string;\n  open: boolean;\n  handleClose: () => void;\n  isError: boolean;\n}) => {\n  const classes = useStyles();\n\n  return props.isError ? (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={3000}\n      onClose={props.handleClose}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n    >\n      <Alert onClose={props.handleClose} severity=\"error\">\n        {props.text}\n      </Alert>\n    </Snackbar>\n  ) : (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={3000}\n      onClose={props.handleClose}\n    >\n      <Alert\n        onClose={props.handleClose}\n        className={classes.colors}\n        icon={false}\n      >\n        {props.text}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { MIN_CARD_COMPONENT_WIDTH } from \"../../atoms/constants/sizes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: MIN_CARD_COMPONENT_WIDTH,\n  },\n}));\n\nexport default useStyles;\n","import { createContext } from \"react\";\n\nexport const tournamentRegistrationsContext = {\n  openCreatePlayerProfileForm: false,\n  toggleOpenFormState: () => {},\n  onPlayerProfileCreated: (name: string, surname: string) => {},\n  registerPlayer: async (playerId: string) => {},\n};\n\nexport const TournamentRegistrationsContext = createContext(\n  tournamentRegistrationsContext\n);\n","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\n\nexport type TournamentStartRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: TournamentStartRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const TournamentStartRestApi = (\n  config?: Partial<TournamentStartRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    async startTournament(tournamentId: string): Promise<void> {\n      await axios.post(\n        `${currentConfig.baseUrl}/doubles-tournaments/${tournamentId}/start`,\n        null,\n        { params: { tournamentId } }\n      );\n    },\n  };\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Drawer, Grid } from \"@material-ui/core\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { TournamentRegistrationsContext } from \"./Context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TournamentRegistrationsRestApi } from \"../../../restapi/tournament-registrations\";\nimport Notification from \"../Notification/Notification\";\nimport { useHistory } from \"react-router-dom\";\nimport { TournamentStartRestApi } from \"../../../restapi/tournament-start/TournamentStart\";\n\nexport const RegistrationsActionDrawer = (props: {\n  openDrawer: boolean;\n  returnToPrevState: (prevState: boolean) => void;\n  tournamentId: string;\n}) => {\n  const { toggleOpenFormState } = useContext(TournamentRegistrationsContext);\n  const [drawerOpened, setDrawerOpened] = useState<boolean>(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n\n  useEffect(() => {\n    setDrawerOpened(props.openDrawer);\n\n    return () => {\n      setDrawerOpened(false);\n    };\n  }, [props.openDrawer]);\n\n  const history = useHistory();\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const onNotificationOpen = (errorMessage: string) => {\n    setTextAlert(errorMessage);\n    setOpenAlert(true);\n  };\n\n  const onNotificationClose = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  function toggleDrawer(open: boolean) {\n    props.returnToPrevState(false);\n    setDrawerOpened(open);\n  }\n\n  const closeRegistrationsAndStartTournament = async () => {\n    try {\n      await TournamentRegistrationsRestApi().closeTournamentRegistration(\n        props.tournamentId\n      );\n      await TournamentStartRestApi().startTournament(props.tournamentId);\n      toggleDrawer(false);\n      goBack();\n    } catch (error) {\n      onNotificationOpen(error.response.data.message);\n    }\n  };\n\n  const useStyles = makeStyles(() => ({\n    width: {\n      width: \"70%\",\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <>\n      <Drawer\n        anchor={\"bottom\"}\n        open={drawerOpened}\n        onClose={() => toggleDrawer(false)}\n      >\n        <Grid\n          container\n          direction={\"column\"}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <VerticalSpace height=\"30px\" />\n          <Button\n            className={classes.width}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              toggleOpenFormState();\n              toggleDrawer(false);\n            }}\n          >\n            Dodaj i zapisz zawodnika\n          </Button>\n          <VerticalSpace height=\"20px\" />\n          <Button\n            className={classes.width}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={closeRegistrationsAndStartTournament}\n          >\n            Zakończ zapisy na turniej\n          </Button>\n          <VerticalSpace height=\"30px\" />\n        </Grid>\n      </Drawer>\n      <Notification\n        text={textAlert}\n        open={openAlert}\n        handleClose={onNotificationClose}\n        isError={true}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { RegistrationsActionDrawer } from \"./RegistrationsActionDrawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopNavBar = (props: { tournamentId: string }) => {\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const history = useHistory();\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const useStyles = makeStyles(() => ({\n    padding: {\n      padding: 0,\n      paddingTop: \"2px\",\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\n        <Box>\n          <IconButton className={classes.padding} onClick={goBack}>\n            <ArrowBackIosIcon />\n          </IconButton>\n        </Box>\n        <Box flexGrow={1} textAlign=\"center\">\n          <Typography component=\"h6\" variant=\"h6\">\n            Zapisy na turniej\n          </Typography>\n        </Box>\n        <Box>\n          <IconButton\n            data-testid=\"hamburgerMenu\"\n            className={classes.padding}\n            onClick={() => setOpenDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Box>\n      </Box>\n      <RegistrationsActionDrawer\n        openDrawer={openDrawer}\n        returnToPrevState={setOpenDrawer}\n        tournamentId={props.tournamentId}\n      />\n    </>\n  );\n};\n","import { v4 as uuid } from \"uuid\";\n\nexport class EntityIdGenerator {\n  static generate(): string {\n    return uuid();\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserProfileRestApi } from \"../../../restapi/players-profiles\";\nimport { EntityIdGenerator } from \"../../idGenerator/EntityIdGenerator\";\nimport { TournamentRegistrationsRestApi } from \"../../../restapi/tournament-registrations\";\nimport { TournamentRegistrationsContext } from \"../TournamentRegistrationsComponents/Context\";\nimport Notification from \"../Notification/Notification\";\n\nconst validationSchema = yup.object({\n  name: yup.string().required(\"To pole jest wymagane.\"),\n  surname: yup.string().required(\"To pole jest wymagane.\"),\n  email: yup\n    .string()\n    .email(\"Niepoprawny adres e-mail.\")\n    .required(\"To pole jest wymagane.\"),\n  phone: yup\n    .string()\n    .min(9, \"Wprowadź przynajmniej 9 znaków.\")\n    .required(\"To pole jest wymagane.\"),\n});\n\nfunction CreatePlayerProfileForm(props: {\n  onDrawerClose: () => void;\n  tournamentId: string;\n}) {\n  const { onPlayerProfileCreated } = useContext(TournamentRegistrationsContext);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n\n  const onNotificationOpen = (errorMessage: string) => {\n    setTextAlert(errorMessage);\n    setOpenAlert(true);\n  };\n\n  const onNotificationClose = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      try {\n        const playerId = EntityIdGenerator.generate();\n        await UserProfileRestApi().postPlayersProfile({\n          playerId: playerId,\n          firstName: values.name,\n          lastName: values.surname,\n          phoneNumber: values.phone,\n          emailAddress: values.email,\n        });\n        await TournamentRegistrationsRestApi().postPlayersForTournament({\n          tournamentId: props.tournamentId,\n          playerId: playerId,\n        });\n        props.onDrawerClose();\n        onPlayerProfileCreated(values.name, values.surname);\n      } catch (error) {\n        onNotificationOpen(error.response.data.message);\n      }\n    },\n  });\n\n  return (\n    <Grid container direction={\"column\"} justify=\"center\" alignItems=\"center\">\n      <VerticalSpace height=\"10px\" />\n      <Typography component=\"h6\" variant=\"h6\">\n        Nowy zawodnik\n      </Typography>\n      <VerticalSpace height=\"10px\" />\n\n      <form onSubmit={formik.handleSubmit}>\n        <Grid\n          container\n          direction={\"column\"}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <TextField\n            id=\"Imię\"\n            value={formik.values.name}\n            label=\"Imię\"\n            name=\"name\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <VerticalSpace height=\"10px\" />\n\n          <TextField\n            id=\"Nazwisko\"\n            value={formik.values.surname}\n            label=\"Nazwisko\"\n            name=\"surname\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.surname && Boolean(formik.errors.surname)}\n            helperText={formik.touched.surname && formik.errors.surname}\n          />\n          <VerticalSpace height=\"10px\" />\n\n          <TextField\n            id=\"Adres e-mail\"\n            value={formik.values.email}\n            label=\"Adres e-mail\"\n            name=\"email\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <VerticalSpace height=\"10px\" />\n\n          <TextField\n            id=\"Numer telefonu\"\n            value={formik.values.phone}\n            label=\"Numer telefonu\"\n            name=\"phone\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n          />\n\n          <VerticalSpace height=\"1rem\" />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Zapisz zawodnika\n          </Button>\n          <VerticalSpace height=\"1rem\" />\n        </Grid>\n      </form>\n      <Notification\n        text={textAlert}\n        open={openAlert}\n        handleClose={onNotificationClose}\n        isError={true}\n      />\n    </Grid>\n  );\n}\n\nexport default CreatePlayerProfileForm;\n","export enum MatchStatus {\n   FINISHED = \"Zakończony\",\n   STARTED = \"ROZPOCZĘTY\",\n   NO_TABLE = \"Oczekujący\",\n   NO_TEAMS = \"Brak graczy\",\n   NO_ONE_TEAM = \"Brak drugiego teamu\",\n   STATUS_NOT_EXIST = \"---\",\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport CreatePlayerProfileForm from \"../CreatePlayerProfileForm/CreatePlayerProfileForm\";\nimport { TournamentRegistrationsContext } from \"./Context\";\n\nexport const CreatePlayerProfileDrawer = (props: { tournamentId: string }) => {\n  const { openCreatePlayerProfileForm, toggleOpenFormState } = useContext(\n    TournamentRegistrationsContext\n  );\n  const [drawerOpened, setDrawerOpened] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (openCreatePlayerProfileForm) {\n      setDrawerOpened(true);\n      toggleOpenFormState();\n    }\n  }, [openCreatePlayerProfileForm]);\n\n  const toggleDrawer = (open: boolean) => () => {\n    setDrawerOpened(open);\n  };\n\n  const onDrawerClose = () => {\n    setDrawerOpened(false);\n  };\n\n  return (\n    <Drawer anchor={\"bottom\"} open={drawerOpened} onClose={toggleDrawer(false)}>\n      <CreatePlayerProfileForm\n        onDrawerClose={onDrawerClose}\n        tournamentId={props.tournamentId}\n      />\n    </Drawer>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { Button } from \"@material-ui/core\";\nimport { TournamentRegistrationsContext } from \"./Context\";\n\nexport const PlayerNotFound = () => {\n  const { toggleOpenFormState } = useContext(TournamentRegistrationsContext);\n\n  return (\n    <Centered>\n      <Alert severity=\"info\">\n        <AlertTitle>Nie znaleziono zawodnika?</AlertTitle>\n        Zapisz nowego poniżej.\n      </Alert>\n      <VerticalSpace height=\"1rem\" />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => toggleOpenFormState()}\n      >\n        Dodaj i zapisz\n      </Button>\n    </Centered>\n  );\n};\n","import { PlayerProfileDto } from \"../../../restapi/players-profiles\";\nimport React, { useContext } from \"react\";\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { AddCircleOutline, SupervisedUserCircle } from \"@material-ui/icons\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { TournamentRegistrationsContext } from \"./Context\";\n\nexport const PlayersListItem = (props: {\n  player: PlayerProfileDto;\n  isRegistered: boolean;\n}) => {\n  const { registerPlayer } = useContext(TournamentRegistrationsContext);\n\n  function registeredPlayerIcon() {\n    return (\n      <CheckCircleIcon\n        color=\"action\"\n        aria-label=\"registered-player\"\n        data-testid=\"registered-player\"\n      />\n    );\n  }\n\n  function registerPlayerIcon() {\n    return (\n      <IconButton\n        edge=\"end\"\n        aria-label=\"register-player\"\n        data-testid=\"register-player\"\n        onClick={() => registerPlayer(props.player.playerId)}\n      >\n        <AddCircleOutline />\n      </IconButton>\n    );\n  }\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>\n          <SupervisedUserCircle />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={`${props.player.firstName} ${props.player.lastName}`}\n        secondary={props.player.emailAddress}\n      />\n      <ListItemSecondaryAction>\n        {props.isRegistered ? registeredPlayerIcon() : registerPlayerIcon()}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import { PlayerProfileDto } from \"../../../restapi/players-profiles\";\nimport { List } from \"@material-ui/core\";\nimport React from \"react\";\nimport { PlayerNotFound } from \"./PlayerNotFound\";\nimport { PlayersListItem } from \"./PlayersListItem\";\n\nexport const PlayersList = (props: {\n  players: PlayerProfileDto[];\n  registeredPlayersIds: string[];\n}) => {\n  if (props.players.length === 0) {\n    return <PlayerNotFound />;\n  }\n\n  return (\n    <List>\n      {props.players.map((player) => {\n        const isRegistered: boolean = props.registeredPlayersIds.includes(\n          player.playerId\n        );\n        return (\n          <PlayersListItem\n            key={player.playerId}\n            player={player}\n            isRegistered={isRegistered}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport {\n  PlayerProfileDto,\n  UserProfileRestApi,\n} from \"../../../restapi/players-profiles\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { TournamentRegistrationsRestApi } from \"../../../restapi/tournament-registrations\";\nimport Notification from \"../../organisms/Notification/Notification\";\nimport useStyles from \"./styles\";\nimport { TopNavBar } from \"../../organisms/TournamentRegistrationsComponents/TopNavBar\";\nimport { CreatePlayerProfileDrawer } from \"../../organisms/TournamentRegistrationsComponents/CreatePlayerProfileDrawer\";\nimport { PlayersList } from \"../../organisms/TournamentRegistrationsComponents/PlayersList\";\nimport {\n  TournamentRegistrationsContext,\n  tournamentRegistrationsContext,\n} from \"../../organisms/TournamentRegistrationsComponents/Context\";\n\nexport type TournamentRegistrationsProps = {\n  readonly tournamentId: string;\n};\n\nexport const TournamentRegistrations = (\n  props: TournamentRegistrationsProps\n) => {\n  const searchInput = useRef<HTMLInputElement>(null);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n  const [availablePlayers, setAvailablePlayers] = useState<\n    PlayerProfileDto[] | undefined\n  >(undefined);\n  const [filteredPlayers, setFilteredPlayers] = useState<PlayerProfileDto[]>(\n    []\n  );\n  const [registeredPlayersIds, setRegisteredPlayersIds] = useState<string[]>(\n    []\n  );\n\n  const [\n    openCreatePlayerProfileForm,\n    setOpenCreatePlayerProfileForm,\n  ] = useState(tournamentRegistrationsContext.openCreatePlayerProfileForm);\n  const toggleOpenFormState = () => {\n    setOpenCreatePlayerProfileForm((prevValue) => !prevValue);\n  };\n  const onPlayerProfileCreated = (name: string, surname: string) => {\n    onNotificationOpen(name, surname);\n    refreshPlayersAndResetSearchingInput();\n  };\n  const registerPlayer = async (playerId: string) => {\n    await TournamentRegistrationsRestApi().postPlayersForTournament({\n      tournamentId: props.tournamentId,\n      playerId: playerId,\n    });\n    await reloadRegisteredPlayers();\n\n    onNotificationOpen();\n  };\n\n  useEffect(() => {\n    getPlayersProfiles().then();\n  }, []);\n\n  useEffect(() => {\n    reloadRegisteredPlayers().then();\n  }, [props.tournamentId]);\n\n  function getPlayersProfiles() {\n    return UserProfileRestApi()\n      .getPlayersProfiles()\n      .then((playerProfilesList) => {\n        setAvailablePlayers(playerProfilesList.items);\n        setFilteredPlayers(playerProfilesList.items);\n      });\n  }\n\n  function reloadRegisteredPlayers() {\n    return TournamentRegistrationsRestApi()\n      .getRegisteredPlayersIds(props.tournamentId)\n      .then((tournamentRegistrations) => {\n        setRegisteredPlayersIds(tournamentRegistrations.registeredPlayersIds);\n      });\n  }\n\n  function onPlayerSearch(searchInput: string) {\n    if (searchInput.trim() === \"\") {\n      setFilteredPlayers(availablePlayers ?? []);\n    } else {\n      setFilteredPlayers(\n        (availablePlayers ?? []).filter((player) =>\n          `${player.firstName} ${player.lastName} ${player.emailAddress}`.includes(\n            searchInput.trim()\n          )\n        )\n      );\n    }\n  }\n\n  const refreshPlayersAndResetSearchingInput = () => {\n    getPlayersProfiles().then();\n    reloadRegisteredPlayers().then();\n\n    if (searchInput && searchInput.current) {\n      searchInput.current.value = \"\";\n    }\n  };\n\n  const onNotificationOpen = (name: string = \"\", surname: string = \"\") => {\n    name && surname\n      ? setTextAlert(\n          `Pomyślnie utworzono konto ${name} ${surname} oraz zapisano na turniej`\n        )\n      : setTextAlert(\"Pomyślnie zapisano zawodniczkę / zawodnika na turniej\");\n    setOpenAlert(true);\n  };\n\n  const onNotificationClose = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  //TODO: Add REST API error handling\n  const isLoading = availablePlayers === undefined;\n  const classes = useStyles();\n  return (\n    <TournamentRegistrationsContext.Provider\n      value={{\n        openCreatePlayerProfileForm,\n        toggleOpenFormState,\n        onPlayerProfileCreated,\n        registerPlayer,\n      }}\n    >\n      <Card className={classes.root}>\n        <CardContent>\n          <Centered>\n            <TopNavBar tournamentId={props.tournamentId} />\n            <VerticalSpace height=\"1rem\" />\n\n            {isLoading ? (\n              <CircularProgress data-testid=\"TournamentRegistrationsLoadingIndicator\" />\n            ) : (\n              <>\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"player-search-input\">\n                    Zawodnik\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"player-search-input\"\n                    inputRef={searchInput}\n                    onChange={(event) => onPlayerSearch(event.target.value)}\n                    endAdornment={<Search />}\n                    labelWidth={70}\n                  />\n                </FormControl>\n                <VerticalSpace height=\"1rem\" />\n                <PlayersList\n                  players={filteredPlayers}\n                  registeredPlayersIds={registeredPlayersIds}\n                />\n              </>\n            )}\n\n            <Notification\n              text={textAlert}\n              open={openAlert}\n              handleClose={onNotificationClose}\n              isError={false}\n            />\n            <CreatePlayerProfileDrawer tournamentId={props.tournamentId} />\n          </Centered>\n        </CardContent>\n      </Card>\n    </TournamentRegistrationsContext.Provider>\n  );\n};\n","import { useRouteMatch } from \"react-router-dom\";\nimport React from \"react\";\nimport { TournamentRegistrations } from \"../TournamentRegistrations\";\n\nexport interface TournamentRegistrationsRouteParams {\n  readonly tournamentId: string;\n}\n\nexport const TournamentRegistrationsRoute = () => {\n  const match = useRouteMatch<TournamentRegistrationsRouteParams>(\n    \"/tournament-registration/:tournamentId\"\n  );\n  const tournamentId = match?.params.tournamentId;\n  if (!tournamentId) {\n    return null;\n  }\n  return <TournamentRegistrations tournamentId={tournamentId} />;\n};\n","import styled from \"styled-components\";\nimport {PATH_FOR_IMAGES} from \"../constants/imgPaths\";\n\nexport const StyledBackground = styled(\"div\")({\n  backgroundImage: `url(\"${PATH_FOR_IMAGES}/background.png\")`,\n  backgroundPosition: \"center\",\n  backgroundSize: \"cover\",\n  backgroundRepeat: \"no-repeat\",\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  zIndex: -1,\n});\n","import React from 'react';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport {Card} from '@material-ui/core';\nimport {MatchStatus} from \"../../atoms/MatchStatus\";\n\nexport type MatchTeamProps = {\n   readonly player1: string | undefined;\n   readonly player2: string | undefined;\n   readonly teamId:  string | undefined;\n   readonly isWinnerTeam: boolean;\n   readonly matchStatus: MatchStatus;\n};\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n   },\n\n   teamItem: {\n      boxSizing: \"border-box\",\n      display: \"inline-flex\",\n      width: '100%',\n      paddingLeft: \"30px\",\n   },\n\n   avatar: {\n      padding: \"15px 0\"\n   },\n\n   avatarColor: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      backgroundColor: theme.palette.primary.main,\n   },\n\n   inline: {\n      display: 'inline',\n   },\n\n   waitingForTeam: {\n      display: 'inline',\n      color: 'red'\n   },\n\n}));\n\nexport const MatchTeam = ({\n                             player1,\n                             player2,\n                             isWinnerTeam,\n                             teamId,\n                             matchStatus\n                          }: MatchTeamProps) => {\n   const classes = useStyles();\n\n   const isMatchWaitingForPlayers = Boolean(matchStatus === MatchStatus.NO_ONE_TEAM);\n\n   const isWaitingForThisTeam = !(teamId);\n   const WaitingForTeam = <span className={classes.waitingForTeam}>\"Oczekiwanie na drużynę\"</span>;\n\n   const player1Text = player1 || \"player1\";\n   const player2Text = player2 || \"player2\";\n\n   const playersNameText = <><span className={classes.inline}>{player1Text}</span><br/><span\n      className={classes.inline}> & {player2Text} </span></>;\n   const avatarSymbol = (player1Text[0].toUpperCase() + player2Text[0].toUpperCase())\n   const playersTitle = isWaitingForThisTeam ? WaitingForTeam : playersNameText;\n\n   const isWaitingForEnemyTeamDescription = (matchStatus === MatchStatus.NO_ONE_TEAM) && !isWaitingForThisTeam;\n   const WaitingForEnemyTeamDescription = (\n      <>\n         \"Oczekiwanie na\n         <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n         >\n            {isMatchWaitingForPlayers ? ` przeciwnika` : ` stół`}\n\n         </Typography>\n         \".\n      </>\n   )\n\n   const isStartedMatchDescription = matchStatus === MatchStatus.STARTED;\n   const ReadyToStartMatchDescription = (\n      <>\n         Aby ustawić zwycięzcę -\n         <Typography\n            component=\"span\"\n\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n         >\n            Kliknij tu!\n         </Typography>\n      </>\n   )\n\n   const isFinishedMatchDescription = matchStatus === MatchStatus.FINISHED;\n   const FinishedMatchDescription = (\n      <Typography\n         component=\"span\"\n         variant=\"body2\"\n         className={classes.inline}\n         color=\"textPrimary\"\n      >\n         {isWinnerTeam ? `Zwycięzca!` : `Przegrany!`}\n      </Typography>\n   )\n\n   return (\n      <Card className={classes.teamItem}>\n\n         <ListItemAvatar className={classes.avatar}>\n            <Avatar className={classes.avatarColor}>{isWaitingForThisTeam ? \"...\" : avatarSymbol}</Avatar>\n         </ListItemAvatar>\n\n         <ListItemText\n            primary={playersTitle}\n            secondary=\n               {<>\n                  {isFinishedMatchDescription && FinishedMatchDescription}\n                  {isStartedMatchDescription && ReadyToStartMatchDescription}\n                  {isWaitingForEnemyTeamDescription && WaitingForEnemyTeamDescription}\n               </>}\n         />\n      </Card>\n   )\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {TransitionProps} from '@material-ui/core/transitions';\nimport {Card, withStyles} from \"@material-ui/core\";\n\nconst Transition = React.forwardRef(function Transition(\n   props: TransitionProps & { children?: React.ReactElement<any, any> },\n   ref: React.Ref<unknown>,\n) {\n   return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype MatchWinnerDeterminationDialogProps = {\n   agreeCallback: (() => void),\n   isOpen: boolean\n   teamPlayersNames: number | string | undefined;\n}\n\nconst FullParentButton = withStyles({\n   root: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      opacity: 0,\n\n   }\n})(Card);\n\nexport default function MatchWinnerDeterminationDialog(\n   {\n      agreeCallback,\n      isOpen,\n      teamPlayersNames\n   }: MatchWinnerDeterminationDialogProps) {\n\n   const [open, setOpen] = React.useState(isOpen);\n\n   const handleClickOpen = () => {\n      setOpen(true);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   const handleAgreeAndClose = () => {\n      setOpen(false);\n      agreeCallback();\n   };\n\n   return (\n      <div>\n         <FullParentButton variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n         </FullParentButton>\n         <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n         >\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Czy ustawić zwycięzcę meczu?\"}</DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-slide-description\">\n                  Czy aby na pewno chcesz ustawić drużynę '{teamPlayersNames || \"NN\"}' jako zwycięzcę tego meczu?\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button onClick={handleClose} color=\"primary\">\n                  Odrzuć\n               </Button>\n               <Button onClick={handleAgreeAndClose} color=\"primary\">\n                  Zaakceptuj\n               </Button>\n            </DialogActions>\n         </Dialog>\n      </div>\n   );\n}","import React from 'react';\nimport styled from \"styled-components\";\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Avatar, Card, Typography, withStyles} from '@material-ui/core';\nimport {MatchTeam} from \"../MatchTeam/MatchTeam\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {THEME} from \"../../atoms/constants/ThemeMUI\";\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\nimport MatchWinnerDeterminationDialog from \"../MatchWinnerDeterminationDialog/MatchWinnerDeterminationDialog\";\nimport {MatchStatus} from \"../../atoms/MatchStatus\";\n\nexport type MatchItemProps = {\n   level: number | undefined,\n   matchId: string | undefined,\n   matchNumber: number | undefined,\n   matchStatus: MatchStatus,\n   onClickTeam: (matchId: string, teamId: string) => void,\n   tableNumber: number | undefined,\n   winnerTeamId: string | undefined;\n   team1: {\n      readonly firstPlayerName: string | undefined;\n      readonly secondPlayerName: string | undefined;\n      readonly teamId: string | undefined;\n   },\n   team2: {\n      readonly firstPlayerName: string | undefined;\n      readonly secondPlayerName: string | undefined;\n      readonly teamId: string | undefined;\n   },\n   expanded: string | boolean,\n   handleChangeExpander: (panel: string | boolean) => (event: any, isExpanded: string | boolean) => void,\n};\n\nconst TeamHoverButton = styled(\"div\")({\n   \"zIndex\": 1,\n   boxSizing: \"border-box\",\n   display: 'inline-flex',\n   position: \"absolute\",\n   width: \"100%\",\n   height: \"100%\",\n   margin: 0,\n   padding: 0,\n   \"justify-content\": \"center\",\n   \"align-items\": \"center\",\n   fontSize: \"65px\",\n   backgroundColor: THEME.palette.success.light,\n   opacity: 0,\n   cursor: \"pointer\",\n   transition: \"opacity 1s\",\n   '&:hover': {\n      opacity: 0.8,\n   },\n});\n\nconst MatchTeamWrapper = styled(Card)({\n   position: \"relative\",\n   margin: \"3px\"\n});\n\nconst StyledAccordionDetails = styled(AccordionDetails)({\n   display: \"flex\",\n   flexDirection: \"column\",\n   backgroundColor: THEME.palette.background.default,\n});\n\nconst StyledAvatar = withStyles({\n   root: {\n      color: THEME.palette.getContrastText(THEME.palette.secondary.main),\n      backgroundColor: THEME.palette.secondary.main,\n   },\n})(Avatar);\n\nconst MatchItemWrapper = withStyles({\n   root: {\n      width: \"100%\"\n   }\n})(Card);\n\nexport const MatchItem = (\n   {\n      expanded,\n      handleChangeExpander,\n      level,\n      matchId,\n      matchNumber,\n      matchStatus,\n      onClickTeam,\n      team1,\n      team2,\n      winnerTeamId\n   }: MatchItemProps,) => {\n\n   const isWinnerTeam1 = winnerTeamId === team1.teamId;\n   const isWinnerTeam2 = winnerTeamId === team2.teamId;\n\n   const isMatchFinished = matchStatus === MatchStatus.FINISHED;\n   const isMatchStarted = matchStatus === MatchStatus.STARTED;\n\n   const agreeDialogCallback = (matchId: string, teamName: string): void => onClickTeam(matchId, teamName);\n\n\n   return (\n      <MatchItemWrapper elevation={3}>\n         <Accordion expanded={expanded === `panel${matchNumber}`}\n                    onChange={handleChangeExpander(`panel${matchNumber}`)}>\n            <AccordionSummary\n               expandIcon={<ExpandMoreIcon/>}\n               aria-controls=\"panel1bh-content\"\n               id=\"panel1bh-header\"\n            >\n               <ListItemAvatar>\n                  <StyledAvatar>{matchNumber}</StyledAvatar>\n               </ListItemAvatar>\n\n               <ListItemText\n                  primary={`- ${matchStatus} -`}\n                  secondary={\n                     <React.Fragment>\n                        <Typography\n                           component=\"span\"\n                           variant=\"body2\"\n                           display=\"inline\"\n                           color=\"textPrimary\"\n                        >\n                           {`Numer meczu: `}\n                        </Typography>\n                        {(matchNumber || matchNumber === 0) ? matchNumber : \"-\"}\n                        <br/>\n                        <Typography\n                           component=\"span\"\n                           variant=\"body2\"\n                           display=\"inline\"\n                           color=\"textPrimary\"\n                        >\n                           {`Poziom: `}\n                        </Typography>\n                        {(level || level === 0) ? level : \"-\"}\n                     </React.Fragment>\n                  }\n               />\n            </AccordionSummary>\n            <StyledAccordionDetails>\n\n               <MatchTeamWrapper>\n                  <TeamHoverButtonComponent\n                     matchId={matchId}\n                     teamId={team1.teamId}\n                     firstPlayerName={team1.firstPlayerName}\n                     secondPlayerName={team1.secondPlayerName}\n                     agreeDialogCallback={agreeDialogCallback}\n                  />\n                  <MatchTeam\n                     isWinnerTeam={isWinnerTeam1}\n                     matchStatus={matchStatus}\n                     teamId={team1.teamId}\n                     player1={team1.firstPlayerName}\n                     player2={team1.secondPlayerName}\n                  />\n               </MatchTeamWrapper>\n\n               <MatchTeamWrapper>\n                  <TeamHoverButtonComponent\n                     matchId={matchId}\n                     teamId={team2.teamId}\n                     firstPlayerName={team2.firstPlayerName}\n                     secondPlayerName={team2.secondPlayerName}\n                     agreeDialogCallback={agreeDialogCallback}\n                  />\n                  <MatchTeam\n                     isWinnerTeam={isWinnerTeam2}\n                     matchStatus={matchStatus}\n                     teamId={team2.teamId}\n                     player1={team2.firstPlayerName}\n                     player2={team2.secondPlayerName}\n                  />\n               </MatchTeamWrapper>\n\n            </StyledAccordionDetails>\n         </Accordion>\n      </MatchItemWrapper>\n   )\n};\n\nconst TeamHoverButtonComponent = (props: {\n   matchId: string | undefined,\n   teamId: string | undefined,\n   firstPlayerName: string | undefined,\n   secondPlayerName: string | undefined,\n   agreeDialogCallback: (matchId: string, teamId: string) => void\n}) => {\n   const matchId = props.matchId;\n   const teamId = props.teamId;\n   const firstPlayerName = props.firstPlayerName;\n   const secondPlayerName = props.secondPlayerName;\n\n   if (!matchId || !teamId) return <div/>;\n\n   return (\n      <TeamHoverButton>\n         <AddCircleTwoToneIcon fontSize=\"inherit\"/>\n         <MatchWinnerDeterminationDialog\n            agreeCallback={() => props.agreeDialogCallback(matchId, teamId)}\n            isOpen={false}\n            teamPlayersNames={`\"${firstPlayerName} & ${secondPlayerName}\"`}\n         />\n      </TeamHoverButton>\n   );\n}","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\nimport { TournamentMatchesListDto } from \"./TournamentMatchesListDto\";\n\nexport type TournamentMatchesListRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: TournamentMatchesListRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const TournamentMatchesListRestAPI = (\n  config?: Partial<TournamentMatchesListRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getTournamentTeamsList(\n      tournamentId: string\n    ): Promise<TournamentMatchesListDto> {\n      return axios\n        .get<TournamentMatchesListDto>(\n          `${currentConfig.baseUrl}/doubles-tournaments/${tournamentId}/matches`\n        )\n        .then((res) => res.data);\n    },\n  };\n};\n","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\nimport { TournamentTeamsListDto } from \"./TournamentTeamsListDto\";\n\nexport type TeamsListRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: TeamsListRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const TournamentTeamsListRestApi = (\n  config?: Partial<TeamsListRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getTournamentTeamsList(\n      tournamentId: string\n    ): Promise<TournamentTeamsListDto> {\n      return axios\n        .get<TournamentTeamsListDto>(\n          `${currentConfig.baseUrl}/doubles-tournaments/${tournamentId}/teams`\n        )\n        .then((res) => res.data);\n    },\n  };\n};\n","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\nimport { MatchDetailsDto } from \"./MatchDetailsDto\";\n\nexport type MatchDetailsRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: MatchDetailsRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const MatchDetailsRestAPI = (\n  config?: Partial<MatchDetailsRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getTournamentTeamsList(matchId: string): Promise<MatchDetailsDto> {\n      return axios\n        .get<MatchDetailsDto>(`${currentConfig.baseUrl}/matches/${matchId}`)\n        .then((res) => res.data);\n    },\n\n    async postMatchWinner(\n      matchId: string,\n      winnerPlayerId: string\n    ): Promise<void> {\n      await axios.post(`${currentConfig.baseUrl}/matches/${matchId}/result`, {\n        winnerId: winnerPlayerId,\n      });\n    },\n  };\n};\n","import React, {useEffect} from 'react';\nimport styled from \"styled-components\";\nimport {Card} from '@material-ui/core';\nimport {MatchItem} from \"../../molecules/MatchItem/MatchItem\";\nimport {MIN_CARD_COMPONENT_WIDTH} from \"../../atoms/constants/sizes\";\nimport {MatchItemType} from \"./MatchItemType\";\nimport {TournamentMatchesListRestAPI} from \"../../../restapi/tournament-matches-list\";\nimport {TournamentMatchesListDto} from \"../../../restapi/tournament-matches-list/TournamentMatchesListDto\";\nimport {MatchStatus} from \"../../atoms/MatchStatus\";\nimport {PlayerProfileDto, UserProfileRestApi} from \"../../../restapi/players-profiles\";\nimport {MatchDetailsDto} from \"../../../restapi/match-details/MatchDetailsDto\";\nimport {TournamentTeamsListDto} from \"../../../restapi/tournament-teams-list/TournamentTeamsListDto\";\nimport {TournamentTeamsListRestApi} from \"../../../restapi/tournament-teams-list/TournamentTeamsListRestApi\";\nimport {MatchDetailsRestAPI} from \"../../../restapi/match-details\";\n\nconst StyledMatchesList = styled(Card)({\n   width: MIN_CARD_COMPONENT_WIDTH,\n});\n\nexport type MatchesListProps = {\n   readonly tournamentId: string;\n};\n\nexport const MatchesList = ({tournamentId}: MatchesListProps) => {\n\n   const [expanded, setExpanded] = React.useState<string | boolean>(false);\n   const [tournamentMatchesListDto, setTournamentMatchesListDto] = React.useState<TournamentMatchesListDto | undefined>();\n   const [matchesDetailsListDto, setMatchesDetailsListDto] = React.useState<MatchDetailsDto[] | undefined>(undefined);\n   const [tournamentTeamsListDto, setTournamentTeamsListDto] = React.useState<TournamentTeamsListDto | undefined>();\n   const [playersProfilesListDto, setPlayersProfilesListDto] = React.useState<PlayerProfileDto[] | undefined>(undefined);\n   const [matchesList, setMatchesList] = React.useState<MatchItemType[] | undefined>();\n\n   useEffect(() => {\n      reloadAllList()\n   }, [tournamentId]);\n\n   useEffect(() => {\n      if (!tournamentMatchesListDto) return;\n\n      Promise.all(tournamentMatchesListDto.queue\n         .map((tournamentMatchesItem) => getMatchDetailsDto(`${tournamentId}_${tournamentMatchesItem.matchNumber}`)))\n         .then(matchesDetailsDto => setMatchesDetailsListDto(matchesDetailsDto))\n\n      getTournamentTeamsListDto(tournamentId)\n         .then(tournamentTeamsListDto => setTournamentTeamsListDto(tournamentTeamsListDto))\n   }, [tournamentMatchesListDto]);\n\n   useEffect(() => {\n      async function setPlayersProfilesListDtoIntoState(): Promise<void> {\n         if (!tournamentTeamsListDto) return;\n\n         const tournamentPlayersIds = tournamentTeamsListDto.items\n            .map(({firstTeamPlayer, secondTeamPlayer}) =>\n               [firstTeamPlayer, secondTeamPlayer]\n            ).reduce((acc, teamPlayers) => acc.concat(teamPlayers))\n\n         const playersProfilesList = await Promise.all(tournamentPlayersIds\n            .map((item) => getPlayerProfileDto(item)));\n\n         setPlayersProfilesListDto(playersProfilesList);\n      }\n\n      setPlayersProfilesListDtoIntoState().then();\n   }, [tournamentTeamsListDto]);\n\n   useEffect(() => {\n      if (tournamentMatchesListDto\n         && matchesDetailsListDto\n         && tournamentTeamsListDto\n         && playersProfilesListDto\n      ) {\n         const matchList = returnMatchList(\n            tournamentMatchesListDto,\n            matchesDetailsListDto,\n            tournamentTeamsListDto,\n            playersProfilesListDto,\n            reloadAllList\n         );\n         setMatchesList(matchList);\n      }\n\n   }, [playersProfilesListDto])\n\n   const handleChangeExpander = (panel: string | boolean) => (event: any, isExpanded: string | boolean) => {\n      setExpanded(isExpanded ? panel : false);\n   };\n\n   function reloadAllList() {\n      TournamentMatchesListRestAPI()\n         .getTournamentTeamsList(tournamentId)\n         .then((tournamentMatchesListDto) => setTournamentMatchesListDto(tournamentMatchesListDto));\n   }\n\n   return (\n      <StyledMatchesList>\n         {matchesList\n            ? matchesList\n               .map((item, index) => returnMatchItem(item, index, expanded, handleChangeExpander))\n            : \"Oczekiwanie na pobranie...\"}\n      </StyledMatchesList>\n   )\n};\n\nconst returnMatchItem = (\n   {level, matchId, matchNumber, matchStatus, onClickTeam, tableNumber, team1, team2, winnerId}: MatchItemType,\n   index: number,\n   expanded: string | boolean,\n   handleChangeExpander: (panel: string | boolean) => (event: any, isExpanded: string | boolean) => void\n) => (\n   <MatchItem\n      key={matchNumber}\n      level={level}\n      matchNumber={matchNumber}\n      matchId={matchId}\n      matchStatus={matchStatus}\n      onClickTeam={onClickTeam}\n      tableNumber={tableNumber}\n      winnerTeamId={winnerId}\n      team1={team1}\n      team2={team2}\n      expanded={expanded}\n      handleChangeExpander={handleChangeExpander}\n   />\n)\n\nconst returnMatchList = (\n   tournamentMatchesListDto: TournamentMatchesListDto,\n   matchesDetailsListDto: MatchDetailsDto[],\n   tournamentTeamsListDto: TournamentTeamsListDto,\n   playersProfilesListDto: PlayerProfileDto[],\n   reloadAllList: () => void\n): MatchItemType[] => {\n\n   const tournamentId = tournamentMatchesListDto.tournamentId;\n   const tournamentMatchesList = {...tournamentMatchesListDto}.queue;\n   const matchesDetailsList = [...matchesDetailsListDto];\n   const tournamentTeamsList = {...tournamentTeamsListDto}.items;\n   const playersProfilesList = [...playersProfilesListDto];\n\n   return tournamentMatchesList\n      .map(\n         ({\n             matchNumber,\n             status,\n             tableNumber,\n             team1Id,\n             team2Id\n          }) => {\n\n            const findMatchId = (): string => `${tournamentId}_${matchNumber}`;\n\n            const findWinnerId = (): string | undefined => matchesDetailsList\n               .find(matchDetails => matchDetails.matchId === findMatchId())\n               ?.winnerId;\n\n            const findLevel = (): number | undefined => undefined;\n\n            type TeamPlayersNames = {\n               firstTeam: {\n                  firstPlayerName: string | undefined,\n                  secondPlayerName: string | undefined\n               },\n               secondTeam: {\n                  firstPlayerName: string | undefined,\n                  secondPlayerName: string | undefined\n               }\n            };\n\n            const findTeamPlayersNames = (): TeamPlayersNames => {\n               enum PlayerInTeam { First = \"firstTeamPlayer\", Second = \"secondTeamPlayer\", }\n\n               const returnPlayerName = (playerTeamId: string | undefined, playerInTeam: PlayerInTeam): string | undefined => {\n                  enum PartOfName { FirstName = \"firstName\", SecondName = \"lastName\", }\n\n                  return [PartOfName.FirstName, PartOfName.FirstName].map((item) =>\n                     playersProfilesList\n                        .find(({playerId}) => playerId === tournamentTeamsList\n                           .find(({teamId}) => teamId === playerTeamId)\n                           ?.[playerInTeam]\n                        )?.[item]\n                  ).reduce((acc, partOfName) => `${acc} ${partOfName}`)\n               }\n               return ({\n                  firstTeam: {\n                     firstPlayerName: returnPlayerName(team1Id, PlayerInTeam.First),\n                     secondPlayerName: returnPlayerName(team1Id, PlayerInTeam.Second),\n                  },\n                  secondTeam: {\n                     firstPlayerName: returnPlayerName(team2Id, PlayerInTeam.First),\n                     secondPlayerName: returnPlayerName(team2Id, PlayerInTeam.Second),\n                  },\n               })\n            };\n\n            function findStatus(): MatchStatus {\n               if (status === \"started\") return MatchStatus.STARTED;\n               if (status === \"ended\") return MatchStatus.FINISHED;\n               if (status === \"enqueued\") return MatchStatus.NO_TABLE;\n               if (status === \"noTeams\") {\n                  if (team1Id || team1Id) return MatchStatus.NO_ONE_TEAM;\n                  else return MatchStatus.NO_TEAMS;\n               }\n               return MatchStatus.STATUS_NOT_EXIST;\n            }\n\n            return {\n               level: findLevel(),\n               matchId: findMatchId(),\n               matchNumber: matchNumber,\n               matchStatus: findStatus(),\n               onClickTeam: (matchId: string, winnerPlayerId: string) => setMatchWinner(matchId, winnerPlayerId, reloadAllList),\n               tableNumber: tableNumber,\n               winnerId: findWinnerId(),\n               team1: {\n                  firstPlayerName: findTeamPlayersNames().firstTeam.firstPlayerName,\n                  secondPlayerName: findTeamPlayersNames().firstTeam.secondPlayerName,\n                  teamId: team1Id,\n               },\n               team2: {\n                  firstPlayerName: findTeamPlayersNames().secondTeam.firstPlayerName,\n                  secondPlayerName: findTeamPlayersNames().secondTeam.secondPlayerName,\n                  teamId: team2Id,\n               }\n            }\n         }\n      )\n}\n\nconst getMatchDetailsDto = (matchId: string): Promise<MatchDetailsDto> => MatchDetailsRestAPI()\n   .getTournamentTeamsList(matchId)\n   .then(({firstMatchSideId, matchId, secondMatchSideId, winnerId}) => ({\n      matchId: matchId,\n      firstMatchSideId: firstMatchSideId,\n      secondMatchSideId: secondMatchSideId,\n      winnerId: winnerId\n   }));\n\nconst getPlayerProfileDto = (playerId: string): Promise<PlayerProfileDto> => UserProfileRestApi()\n   .getPlayerProfile(playerId)\n   .then(({emailAddress, firstName, lastName, phoneNumber, playerId}) => (\n      {playerId, firstName, lastName, phoneNumber, emailAddress,}));\n\nconst getTournamentTeamsListDto = (tournamentId: string): Promise<TournamentTeamsListDto> => TournamentTeamsListRestApi()\n   .getTournamentTeamsList(tournamentId)\n   .then(teamsList => teamsList);\n\nconst setMatchWinner = (matchId: string, winnerPlayerId: string, reloadAllList: () => void) => MatchDetailsRestAPI()\n   .postMatchWinner(matchId, winnerPlayerId)\n   .then(() => reloadAllList());\n\n\n","import { useRouteMatch } from \"react-router-dom\";\nimport React from \"react\";\nimport {PATH_FOR_PLAYER_MATCHES_VIEW} from \"../../atoms/constants/routerPaths\";\nimport {MatchesList} from \"../../organisms/MatchesList/MatchesList\";\n\nexport interface MatchesListRouteParams {\n  readonly tournamentId: string;\n}\n\nexport const MatchesListRoute = () => {\n  const match = useRouteMatch<MatchesListRouteParams>(\n      PATH_FOR_PLAYER_MATCHES_VIEW\n  );\n  const tournamentId = match?.params.tournamentId;\n  if (!tournamentId) {\n    return null;\n  }\n  return <MatchesList tournamentId={tournamentId} />;\n};\n","import {useHistory} from \"react-router-dom\";\nimport {IconButton} from \"@material-ui/core\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport {THEME} from \"../../constants/ThemeMUI\";\n\nconst style = {\n    color: THEME.palette.primary.main,\n    fontSize: \"2.5rem\"\n}\n\nconst ArrowBackButton = () => {\n    let history = useHistory();\n\n    function handleClick() {\n        history.push(\"/\")\n    }\n\n    return (\n            <IconButton>\n                <NavigateBeforeIcon style={style} onClick={handleClick}/>\n            </IconButton>\n    )\n}\n\nexport default ArrowBackButton;","import ArrowBackButton from \"../../atoms/Shared/ArrowBack/ArrowBackButton\";\nimport {Card, Grid, Typography} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport {Centered} from \"../../atoms/Shared/Centered\";\nimport {PATH_FOR_HOME_VIEW} from \"../../atoms/constants/routerPaths\";\n\ntype cardTitleWithNavButtonProps = {\n    readonly title: string;\n}\n\nconst CardTitleWithNavButton = (props: cardTitleWithNavButtonProps) => {\n    return (\n        <PageTitleBox>\n            <Grid item xs={3}>\n                <ArrowBackButton/>\n            </Grid>\n            <Grid item xs={6}>\n                <Centered>\n                    <Typography component=\"h5\" variant=\"h5\">{props.title}</Typography>\n                </Centered>\n            </Grid>\n            <Grid item xs={3}></Grid>\n        </PageTitleBox>\n    )\n}\n\nconst PageTitleBox = styled(Card)({\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minWidth: \"300px\",\n    maxHeight: \"150px\",\n});\n\nexport default CardTitleWithNavButton;","import {Button} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\n\ntype TextButtonProps = {\n    readonly text: string;\n    readonly onLink: string;\n}\n\nconst TextButton = ({text, onLink}: TextButtonProps) => {\n    return (\n            <Link to={onLink} style={{textDecoration: \"none\"}}>\n                <Button color=\"primary\" size=\"large\" style={{fontWeight: 600}}>{text}</Button>\n            </Link>\n    )\n}\n\nexport default TextButton;","import {Card, CardActions, CardContent, CardMedia, Typography} from \"@material-ui/core\";\nimport TextButton from \"../../atoms/Shared/TextButton/TextButton\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\";\nimport {MIN_CARD_COMPONENT_WIDTH} from \"../../atoms/constants/sizes\";\nimport {PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW} from \"../../atoms/constants/routerPaths\";\nimport {PATH_FOR_IMAGES} from \"../../atoms/constants/imgPaths\";\n\ntype TournamentCardProps = {\n    readonly tournamentId: string,\n    readonly tournamentName: string,\n    readonly registrationStatus: string,\n}\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: MIN_CARD_COMPONENT_WIDTH,\n    },\n    media: {\n        height: 150,\n    },\n    cardActions: {\n        justifyContent: \"flex-end\",\n    }\n});\n\nconst TournamentCard = ({tournamentId, tournamentName, registrationStatus}: TournamentCardProps) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia className={classes.media}\n                       image={`${PATH_FOR_IMAGES}/foosball_tournament.jpg`}\n                       title=\"Tournament Image\"\n            />\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {tournamentName}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    ZAPISY: {registrationStatus}\n                </Typography>\n            </CardContent>\n            <VerticalSpace height={\"20px\"}/>\n            <CardActions disableSpacing={true} className={classes.cardActions}>\n                <>\n                {registrationStatus === \"OPENED\"\n                    ?\n                    <TextButton text={\"Zapisy\"} onLink={PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW + `/${tournamentId}`}/>\n                    :\n                    <TextButton text={\"Mecze i wyniki\"} onLink={''}/>\n                }\n                </>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default TournamentCard;","import axios from \"axios\";\nimport {TournamentDetailsDto} from \"./TournamentDetailsDto\";\n\nexport type TournamentDetailsRestApiConfig = {\n    readonly baseUrl: string;\n};\n\nconst defaultConfig: TournamentDetailsRestApiConfig = {\n    baseUrl: \"http://localhost:5000/rest-api\",\n};\n\nexport const TournamentDetailsRestApi = (\n    config?: Partial<TournamentDetailsRestApiConfig>\n) => {\n    const currentConfig = {\n        ...defaultConfig,\n        config,\n        baseUrl:\n            process.env.REACT_APP_REST_API_BASE_URL ??\n            config?.baseUrl ??\n            defaultConfig.baseUrl,\n    };\n    return {\n        getAllTournamentsDetails(): Promise<TournamentDetailsDto[]> {\n            return axios\n                .get<TournamentDetailsDto[]>(\n                    `${currentConfig.baseUrl}/tournament-details/`\n                )\n                .then(res => res.data);\n        }\n    };\n};\n","import {createStyles, GridList, GridListTile, styled, Theme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TournamentCard from \"../../molecules/TournamentCard/TournamentCard\";\nimport {MIN_CARD_COMPONENT_WIDTH} from \"../../atoms/constants/sizes\";\nimport {useEffect, useState} from \"react\";\nimport {TournamentRegistrationsRestApi} from \"../../../restapi/tournament-registrations\";\nimport {TournamentDetailsRestApi} from \"../../../restapi/tournament-details/TournamentDetailsRestApi\";\nimport {TournamentDetailsDto} from \"../../../restapi/tournament-details/TournamentDetailsDto\";\nimport {TournamentRegistrationsWithDetailsDto} from \"../../../restapi/tournament-registrations/TournamentRegistrationsWithDetailsDto\";\n\n\nconst loadedTournamentsCards = [\n    {\n        tournamentId: '1',\n        tournamentName: 'Turniej z jajem',\n        status: 'OPENED',\n        registeredPlayersIds: [],\n    },\n    {\n        tournamentId: '2',\n        tournamentName: 'Turniej bez jaja',\n        status: 'CLOSED',\n        registeredPlayersIds: [],\n    },\n    {\n        tournamentId: '3',\n        tournamentName: 'Turniej wrocławski',\n        status: 'OPENED',\n        registeredPlayersIds: [],\n    },\n    {\n        tournamentId: '4',\n        tournamentName: 'Turniej kaliski',\n        status: 'CLOSED',\n        registeredPlayersIds: [],\n    },\n]\n\nconst tournamentsRegistrationsDetailsList = [\n    {\n        tournamentId: '2480fc2c-bbd7-427c-9439-02f76583aef5',\n        tournamentName: 'Taka na sztywno',\n    },\n    {\n        tournamentId: '2480fc2c-bbd7-427c-9439-02f76583aef6',\n        tournamentName: 'Taka na luźno',\n    },\n]\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n            '&::-webkit-scrollbar-track':\n                {\n                    webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.3)',\n                    borderRadius: '4px',\n                    backgroundColor: '#646464',\n                },\n            '&::-webkit-scrollbar': {\n                height: '10px',\n            },\n            '&::-webkit-scrollbar-thumb': {\n                borderRadius: '4px',\n                webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,.3)',\n                backgroundColor: theme.palette.primary.main,\n            }\n        },\n    }),\n);\n\nconst StyledWrapper = styled(\"div\")({\n    boxSizing: \"border-box\",\n    margin: 0,\n    padding: 0,\n    maxWidth: MIN_CARD_COMPONENT_WIDTH,\n    width: MIN_CARD_COMPONENT_WIDTH,\n})\n\nconst TournamentCardsGallery = () => {\n    const [tournamentsRegistrations, setTournamentsRegistrations] = useState<TournamentRegistrationsWithDetailsDto[]>(loadedTournamentsCards); // TODO usunąć initial state na produkcję\n    const [tournamentsDetails, setTournamentsDetails] = useState<TournamentDetailsDto[]>(tournamentsRegistrationsDetailsList); // TODO usunąć initial state na produkcję\n\n    useEffect(() => {\n        TournamentDetailsRestApi()\n            .getAllTournamentsDetails()\n            .then((tournamentsDetails) => {\n                setTournamentsDetails(tournamentsDetails);\n            })\n\n        TournamentRegistrationsRestApi()\n            .getAllTournamentsRegistrations()\n            .then((tournamentsRegistrations) =>\n            {\n                const tournamentsWithDetailsList = tournamentsRegistrations.items.map((tournament, i) => Object.assign({}, tournament, tournamentsDetails[i]));\n                setTournamentsRegistrations(tournamentsWithDetailsList);\n            })\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <StyledWrapper>\n            <GridList cols={1} cellHeight={'auto'} style={{margin: 0}} classes={{\n                root: classes.gridList,\n            }}>\n                {tournamentsRegistrations?.map((card) => (\n                    <GridListTile key={card.tournamentId} style={{padding: 0, marginRight: '40px'}}>\n                        <TournamentCard tournamentId={card.tournamentId} tournamentName={card.tournamentName}\n                                        registrationStatus={card.status}/>\n                    </GridListTile>\n                ))}\n            </GridList>\n        </StyledWrapper>\n    );\n}\n\nexport default TournamentCardsGallery;","import {Link} from \"react-router-dom\";\nimport {Fab} from \"@material-ui/core\";\nimport {Add} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\ntype NewTournamentButtonProps = {\n    readonly onLink: string;\n}\n\nconst useStyles = makeStyles({\n        link: {\n            textDecoration: \"none\"\n        },\n        fab: {\n            padding: 10,\n            position: 'absolute',\n            right: 0,\n        },\n        icon: {\n            paddingRight: 7\n        },\n    }\n)\n\nconst NewTournamentButton = ({onLink}: NewTournamentButtonProps) => {\n    const classes = useStyles();\n\n    return (\n        <Link to={onLink} className={classes.link}>\n            <Fab variant=\"extended\" color=\"secondary\" aria-label=\"add\" className={classes.fab}>\n                <Add className={classes.icon}/>\n                Turniej\n            </Fab>\n        </Link>\n    )\n}\n\nexport default NewTournamentButton;","import CardTitleWithNavButton from \"../../molecules/CardTitleWithNavButton/CardTitleWithNavButton\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\";\nimport TournamentCardsGallery from \"../../organisms/TournamentsCardsGallery/TournamentsCardsGallery\";\nimport NewTournamentButton from \"../../molecules/NewTournamentButton/NewTournamentButton\";\nimport {styled} from \"@material-ui/core\";\n\nconst StyledWrapper = styled(\"div\")({\n    position: 'relative'\n})\n\nconst TournamentsList = () => {\n    return (\n        <StyledWrapper>\n            <CardTitleWithNavButton title={\"Turnieje\"}/>\n            <VerticalSpace height={30}/>\n            <TournamentCardsGallery/>\n            <VerticalSpace height={30}/>\n            <NewTournamentButton onLink={''}/>\n        </StyledWrapper>\n    )\n}\n\nexport default TournamentsList;","import React from \"react\";\nimport {Button, Grid, MuiThemeProvider} from \"@material-ui/core\";\nimport {Centered} from \"../../atoms/Shared/Centered\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {THEME} from \"../../atoms/constants/ThemeMUI\";\nimport Footer from \"../../organisms/Footer/Footer\";\nimport {HomeMenu} from \"../HomeMenu/HomeMenu\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\";\nimport Header from \"../../organisms/Header/Header\";\nimport {TournamentRegistrationsRoute} from \"../Routes/TournamentRegistrationsRoutes\";\nimport {StyledBackground} from \"../../atoms/Background/StyledBackground\";\nimport {\n  PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW,\n  PATH_FOR_HOME_VIEW,\n  PATH_FOR_LOGIN_VIEW,\n  PATH_FOR_PLAYER_MATCHES_VIEW,\n  PATH_FOR_PLAYER_PROFILE_CREATION_VIEW,\n  PATH_FOR_PLAYERS_PROFILES_VIEW,\n  PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW,\n  PATH_FOR_TOURNAMENTS_SELECTION_VIEW\n} from \"../../atoms/constants/routerPaths\";\nimport {MatchesListRoute} from \"../Routes/MatchesListRoutes\";\nimport TournamentsList from \"../TournamentsList/TournamentsList\";\n\nfunction TourDeFoos() {\n  return (\n    <Router>\n      <StyledBackground />\n      <MuiThemeProvider theme={THEME}>\n        <Centered>\n          <Header />\n          <VerticalSpace height=\"20px\" />\n          <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: \"75vh\" }}\n          >\n            <Switch>\n              <Route path={PATH_FOR_LOGIN_VIEW} exact>\n                <Button>PATH_FOR_LOGIN_VIEW</Button>\n              </Route>\n              <Route path={PATH_FOR_TOURNAMENTS_SELECTION_VIEW} exact>\n                <TournamentsList/>\n              </Route>\n              <Route path={PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW} exact>\n                PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW\n              </Route>\n              <Route\n                path={PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW + `/:tournamentId`}\n              >\n                <Centered>\n                  <TournamentRegistrationsRoute />\n                </Centered>\n              </Route>\n              <Route path={PATH_FOR_PLAYERS_PROFILES_VIEW} exact>\n                PATH_FOR_PLAYERS_PROFILES_VIEW\n              </Route>\n              <Route path={PATH_FOR_PLAYER_PROFILE_CREATION_VIEW} exact>\n                PATH_FOR_PLAYER_PROFILE_CREATION_VIEW\n              </Route>\n              <Route path={PATH_FOR_PLAYER_MATCHES_VIEW} exact>\n                <Centered>\n                  <MatchesListRoute />\n                </Centered>\n              </Route>\n\n              <Route path={PATH_FOR_HOME_VIEW} exact>\n                <HomeMenu />\n              </Route>\n            </Switch>\n          </Grid>\n          <VerticalSpace height=\"55px\" />\n          <Footer />\n        </Centered>\n      </MuiThemeProvider>\n    </Router>\n  );\n}\n\nexport default TourDeFoos;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TourDeFoos from \"./components/pages/TourDeFoos/TourDeFoos\";\nimport \"./index.css\";\n\n//Disable when you want to interact with real REST API server\nif (process.env.REACT_APP_MOCK_WITH_MSW === \"true\") {\n    const {worker} = require(\"./mocks/msw/browser\");\n    worker.start().then(() => console.log(\"MSW worker started!\"));\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <TourDeFoos/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","export  const PATH_BASE_URL : string = \"http://localhost:5000/rest-api\";\n","export * from \"./PlayerProfilesListDto\";\nexport * from \"./PlayerProfileDto\";\nexport * from \"./PlayersProfilesRestApi\";\n"],"sourceRoot":""}