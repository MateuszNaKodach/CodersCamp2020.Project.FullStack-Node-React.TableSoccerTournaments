{"version":3,"sources":["restapi/players-profiles/PlayersProfilesRestApi.ts","components/atoms/Shared/Centered/Centered.tsx","components/atoms/constants/ThemeMUI.tsx","components/organisms/Footer/styles.js","components/organisms/Footer/Footer.tsx","components/atoms/Shared/VerticalSpace/VerticalSpace.tsx","components/molecules/CardTitle/CardTitle.tsx","components/atoms/constants/sizes.tsx","components/templates/Menu/Menu.tsx","components/atoms/constants/routerPaths.tsx","components/pages/HomeMenu/HomeMenu.tsx","components/atoms/constants/names.tsx","components/organisms/Header/styles.js","components/atoms/constants/imgPaths.tsx","components/organisms/Header/Header.tsx","restapi/tournament-registrations/TournamentRegistrationsRestAPI.ts","components/organisms/Notification/styles.js","components/organisms/Notification/Notification.tsx","components/pages/TournamentRegistrations/styles.js","components/organisms/TournamentRegistrationsComponents/Context.ts","components/organisms/TournamentRegistrationsComponents/RegistrationsActionDrawer.tsx","components/organisms/TournamentRegistrationsComponents/TopNavBar.tsx","components/idGenerator/EntityIdGenerator.ts","components/organisms/CreatePlayerProfileForm/CreatePlayerProfileForm.tsx","components/atoms/MatchStatus.tsx","components/organisms/TournamentRegistrationsComponents/CreatePlayerProfileDrawer.tsx","components/organisms/TournamentRegistrationsComponents/PlayerNotFound.tsx","components/organisms/TournamentRegistrationsComponents/PlayersListItem.tsx","components/organisms/TournamentRegistrationsComponents/PlayersList.tsx","components/pages/TournamentRegistrations/TournamentRegistrations.tsx","components/pages/Routes/TournamentRegistrationsRoutes.tsx","components/atoms/Background/StyledBackground.tsx","components/molecules/MatchTeam/MatchTeam.tsx","components/molecules/MatchWinnerDeterminationDialog/MatchWinnerDeterminationDialog.tsx","components/molecules/MatchItem/MatchItem.tsx","restapi/matches-list/MatchesListRestAPI.ts","restapi/matches-list/MatchInformationRestAPI.ts","restapi/teams-list/TeamsListRestAPI.ts","components/organisms/MatchesList/MatchesList.tsx","components/pages/Routes/MatchesListRoutes.tsx","components/pages/TourDeFoos/TourDeFoos.tsx","index.tsx","components/atoms/constants/apiPaths.tsx","restapi/players-profiles/index.ts"],"names":["defaultConfig","baseUrl","PATH_BASE_URL","UserProfileRestApi","config","currentConfig","process","getPlayersProfiles","axios","get","then","response","data","getPlayerProfile","playerId","postPlayersProfile","playerProfile","post","Centered","styled","div","THEME","createMuiTheme","palette","primary","main","grey","contrastText","secondary","useStyles","makeStyles","theme","footer","boxSizing","position","bottom","width","padding","color","backgroundColor","Footer","text","classes","Box","className","data-testid","Typography","variant","align","VerticalSpace","props","style","minHeight","height","CardTitle","component","title","otherProps","MIN_CARD_COMPONENT_WIDTH","Menu","StartMenuCard","CardContent","MenuButtonsList","menuButtonsList","Card","display","minWidth","paddingTop","paddingBottom","List","map","item","index","MenuButton","textName","onClick","onLink","to","Button","root","PATH_FOR_TOURNAMENTS_SELECTION_VIEW","PATH_FOR_PLAYERS_PROFILES_VIEW","PATH_FOR_PLAYER_MATCHES_VIEW","homeMenuButtonsListProps","console","log","HomeMenu","header","justifyContent","logo","maxHeight","letterSpacing","PATH_FOR_IMAGES","Header","AppBar","Toolbar","flexGrow","src","alt","TournamentRegistrationsRestApi","getRegisteredPlayersIds","tournamentId","res","postPlayersForTournament","body","closeTournamentRegistration","params","require","colors","Notification","isError","Snackbar","open","autoHideDuration","onClose","handleClose","anchorOrigin","vertical","horizontal","Alert","severity","icon","tournamentRegistrationsContext","openCreatePlayerProfileForm","toggleOpenFormState","onPlayerProfileCreated","name","surname","registerPlayer","a","TournamentRegistrationsContext","createContext","RegistrationsActionDrawer","useContext","useState","drawerOpened","setDrawerOpened","openAlert","setOpenAlert","textAlert","setTextAlert","useEffect","openDrawer","history","useHistory","toggleDrawer","returnToPrevState","startTournament","goBack","errorMessage","message","Drawer","anchor","Grid","container","direction","justify","alignItems","event","reason","TopNavBar","setOpenDrawer","IconButton","textAlign","EntityIdGenerator","uuid","validationSchema","yup","required","email","phone","min","CreatePlayerProfileForm","MatchStatus","formik","useFormik","initialValues","onSubmit","values","generate","firstName","lastName","phoneNumber","emailAddress","onDrawerClose","handleSubmit","TextField","id","value","label","onChange","handleChange","error","touched","Boolean","errors","helperText","type","CreatePlayerProfileDrawer","PlayerNotFound","AlertTitle","PlayersListItem","ListItem","ListItemAvatar","Avatar","SupervisedUserCircle","ListItemText","player","ListItemSecondaryAction","isRegistered","aria-label","edge","AddCircleOutline","PlayersList","players","length","registeredPlayersIds","includes","TournamentRegistrations","searchInput","useRef","undefined","availablePlayers","setAvailablePlayers","filteredPlayers","setFilteredPlayers","setRegisteredPlayersIds","setOpenCreatePlayerProfileForm","reloadRegisteredPlayers","onNotificationOpen","playerProfilesList","items","tournamentRegistrations","refreshPlayersAndResetSearchingInput","current","isLoading","Provider","prevValue","CircularProgress","FormControl","InputLabel","htmlFor","OutlinedInput","inputRef","trim","filter","onPlayerSearch","target","endAdornment","Search","labelWidth","TournamentRegistrationsRoute","match","useRouteMatch","StyledBackground","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","top","left","zIndex","background","paper","teamItem","paddingLeft","avatar","avatarColor","getContrastText","inline","waitingForTeam","MatchTeam","player1","player2","isWinnerTeam","teamId","matchStatus","isMatchWaitingForPlayers","NO_ONE_TEAM","isWaitingForThisTeam","WaitingForTeam","player1Text","player2Text","playersNameText","avatarSymbol","toUpperCase","playersTitle","isWaitingForEnemyTeamDescription","WaitingForEnemyTeamDescription","isStartedMatchDescription","STARTED","ReadyToStartMatchDescription","isFinishedMatchDescription","FINISHED","FinishedMatchDescription","Transition","React","forwardRef","ref","Slide","FullParentButton","withStyles","opacity","MatchWinnerDeterminationDialog","isOpen","setOpen","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","teamName","DialogActions","agreeCallback","TeamHoverButton","margin","fontSize","success","light","cursor","transition","MatchTeamWrapper","StyledAccordionDetails","AccordionDetails","flexDirection","default","StyledAvatar","MatchItemWrapper","MatchItem","isWinnerTeam1","winnerTeamId","team1","isWinnerTeam2","team2","TeamHoverButtonComponent","p","matchId","onClickTeam","agreeDialogCallback","elevation","Accordion","expanded","matchNumber","handleChangeExpander","AccordionSummary","expandIcon","aria-controls","Fragment","level","MatchInformationRestApi","getMatchesList","postMatchWinner","winnerPlayerId","winnerId","StyledMatchesList","MatchesList","setExpanded","matchesListItems","setMatchesListItems","setMatchesDetailsListDto","teamsListDto","setTeamsListDto","setPlayersProfilesListDto","reloadAllList","Promise","all","matchListItem","getMatchInformationDto","matchesDetails","getTeamsListDto","tournamentPlayersIds","firstTeamPlayer","secondTeamPlayer","reduce","acc","teamPlayers","concat","getPlayerProfileDto","playersProfilesList","setPlayersProfilesList","panel","isExpanded","MatchesListRestApi","matchesListDto","newMatchesListItems","returnMatchListItemsFromMatchesListDto","returnMatchItem","matchItemBase","queue","matchesItem","setMatchWinner","status","NO_TABLE","team1Id","NO_TEAMS","STATUS_NOT_EXIST","currentPlayerLevel","currentMatchNumber","team2Id","matchInformationDto","firstMatchSideId","secondMatchSideId","playerProfileDto","TeamsListRestApi","teamsList","MatchesListRoute","TourDeFoos","spacing","path","exact","PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70285b4a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { PlayerProfilesListDto } from \"./PlayerProfilesListDto\";\nimport { PlayerProfileDto } from \"./PlayerProfileDto\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\n\nexport type UserProfilesRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: UserProfilesRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const UserProfileRestApi = (\n  config?: Partial<UserProfilesRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getPlayersProfiles(): Promise<PlayerProfilesListDto> {\n      return axios\n        .get<PlayerProfilesListDto>(`${currentConfig.baseUrl}/players-profiles`)\n        .then((response) => response.data);\n    },\n\n    getPlayerProfile(playerId: string): Promise<PlayerProfileDto> {\n      return axios\n        .get<PlayerProfileDto>(\n          `${currentConfig.baseUrl}/players-profiles/${playerId}`\n        )\n        .then((response) => response.data);\n    },\n\n    async postPlayersProfile(playerProfile: PlayerProfileDto): Promise<void> {\n      await axios.post<PlayerProfileDto>(\n        `${currentConfig.baseUrl}/players-profiles`,\n        playerProfile\n      );\n    },\n  };\n};\n","import styled from \"styled-components\";\n\nexport const Centered = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\n\nexport const THEME = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[800],\n      contrastText: \"#E3E152\",\n    },\n    secondary: {\n      main: \"#FFD100\",\n      contrastText: \"#000000\",\n    },\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        boxSizing: 'border-box',\n        position: 'absolute',\n        bottom: '0',\n        width: '100%',\n        padding: '10px 0',\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default useStyles;","import { Typography, Box } from '@material-ui/core';\nimport useStyles from './styles'\n\n\nconst Footer = ({text=`Copyright \\u00a9 TourDeFoos 2021`}) => {\n    const classes = useStyles();\n    return (\n        <Box className={classes.footer} data-testid=\"footer\">\n            <Typography variant='body2' align='center'>\n            {text}\n            </Typography>\n        </Box>\n    )\n}\n\nexport default Footer;","import React from \"react\";\n\nexport const VerticalSpace = (props: { height: string | number }) => (\n  <div style={{ minHeight: props.height }} />\n);\n","import React from 'react';\nimport {Typography,} from \"@material-ui/core\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\"\nimport {Centered} from \"../../atoms/Shared/Centered\";\nimport styled from \"styled-components\";\n\nexport type CardTitleProps = {\n    readonly title: string;\n};\n\nconst CardTitle = (props: CardTitleProps) => (\n    <>\n        <Centered>\n            <Typography component=\"h5\" variant=\"h5\">\n                {props.title}\n            </Typography>\n            <VerticalSpace height=\"2rem\"/>\n        </Centered>\n    </>\n);\n\nexport default styled(({...otherProps}) => (\n    <CardTitle {...otherProps}   />\n))`\n     marginBottom: \"20px\",\n`;\n","export  const MIN_CARD_COMPONENT_WIDTH : string = \"300px\";","import React from 'react';\nimport {Button, Card, CardContent, List, makeStyles,} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport CardTitle from \"../../molecules/CardTitle/CardTitle\";\nimport {VerticalSpace} from \"../../atoms/Shared/VerticalSpace\";\nimport {Centered} from \"../../atoms/Shared/Centered\";\nimport {Link} from \"react-router-dom\";\nimport {MIN_CARD_COMPONENT_WIDTH} from \"../../atoms/constants/sizes\";\n\ntype MenuButtonsProps = {\n    readonly textName: string;\n    readonly onClick: () => void;\n    readonly onLink: string;\n};\n\ntype MenuComponentProps = {\n    readonly title: string;\n    readonly menuButtonsList: MenuButtonsProps[];\n};\n\nexport const Menu = (props: MenuComponentProps) => (\n    <StartMenuCard>\n        <CardContent>\n            <Centered>\n                <CardTitle title={props.title}/>\n                {MenuButtonsList(props.menuButtonsList)}\n            </Centered>\n        </CardContent>\n    </StartMenuCard>\n);\n\nconst StartMenuCard = styled(Card)({\n    display: \"block\",\n    boxSizing: \"border-box\",\n    minWidth: MIN_CARD_COMPONENT_WIDTH,\n    paddingTop: \"40px\",\n    paddingBottom: \"40px\",\n});\n\nconst MenuButtonsList = (props: MenuButtonsProps[]) => (\n    <List>\n        <Centered>\n            {(props.map((item, index) => (\n                <li key={index}>\n                    <MenuButton textName={item.textName} onClick={item.onClick} onLink={item.onLink}/>\n                    <VerticalSpace height=\"1rem\"/>\n                </li>\n            )))\n            }\n        </Centered>\n    </List>\n)\n\nfunction MenuButton({textName, onClick, onLink}: MenuButtonsProps) {\n    const classes = useStyles();\n    return (\n        <>\n            {onLink\n            ?\n            <Link to={onLink}>\n            <Button variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onClick}\n                    className={classes.root}\n            >\n                {textName}\n            </Button>\n            </Link>\n            :\n                <Button variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onClick}\n                        className={classes.root}\n                >\n                    {textName}\n                </Button>\n            }\n        </>\n    )\n}\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"250px\",\n    },\n});\n","export  const PATH_FOR_HOME_VIEW : string = \"/\";\nexport const PATH_FOR_LOGIN_VIEW : string = \"/login\";\nexport  const PATH_FOR_TOURNAMENTS_SELECTION_VIEW : string = \"/tournaments-selection\";\nexport  const PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW : string = \"/new-tournament\";\nexport  const PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW : string = \"/tournament-registration\";\nexport  const PATH_FOR_PLAYERS_PROFILES_VIEW : string = \"/players-profiles\";\nexport  const PATH_FOR_PLAYER_PROFILE_CREATION_VIEW : string = \"/new-player-profiles\";\nexport  const PATH_FOR_PLAYER_MATCHES_VIEW : string = \"/tournament/:tournamentId/matches\";\n\n","import React from \"react\";\nimport { Menu } from \"../../templates/Menu\";\nimport {PATH_FOR_PLAYERS_PROFILES_VIEW, PATH_FOR_TOURNAMENTS_SELECTION_VIEW} from \"../../atoms/constants/routerPaths\";\nimport {APP_NAME} from \"../../atoms/constants/names\";\n\nconst homeMenuButtonsListProps = [\n  {\n    textName: \"Turniej\",\n    onClick: () => {\n      console.log(\"Menu button was clicked!\");\n    },\n    onLink: PATH_FOR_TOURNAMENTS_SELECTION_VIEW,\n  },\n  {\n    textName: \"Zawodnicy\",\n    onClick: () => {\n      console.log(\"Menu button was clicked!\");\n    },\n    onLink: PATH_FOR_PLAYERS_PROFILES_VIEW,\n  },\n];\n\nexport const HomeMenu = () => (\n  <>\n    <Menu title={APP_NAME} menuButtonsList={homeMenuButtonsListProps} />\n  </>\n);","const APP_NAME : string = \"TourDeFoos\";\n\nexport {APP_NAME};","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    boxSizing: \"border-box\",\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    width: \"100%\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    maxHeight: \"50px\",\n  },\n  title: {\n    letterSpacing: \"0.15px\",\n    padding: \"5px\",\n  },\n}));\n\nexport default useStyles;\n","export const PATH_FOR_IMAGES: string = \"/img\";\n","import { Typography, Box, Toolbar, AppBar } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport React from \"react\";\nimport {PATH_FOR_IMAGES} from \"../../atoms/constants/imgPaths\";\n\nconst Header = ({ text = \"Wrocławski Klub Piłki Stołowej\" }) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.header} data-testid=\"header\">\n        <Box flexGrow={1}>\n          <img\n            src={`${PATH_FOR_IMAGES}/logo.png`}\n            alt=\"logo\"\n            className={classes.logo}\n          />\n        </Box>\n        <Box flexGrow={2}>\n          <Centered>\n            <Typography variant=\"h6\" className={classes.title}>\n              {text}\n            </Typography>\n          </Centered>\n        </Box>\n        <Box flexGrow={1} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport { TournamentRegistrationsDto } from \"../../components/pages/TournamentRegistrations/TournamentRegistrationsDto\";\n\nexport type TournamentRegistrationsRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: TournamentRegistrationsRestApiConfig = {\n  baseUrl: \"http://localhost:5000/rest-api\",\n};\n\nexport const TournamentRegistrationsRestApi = (\n  config?: Partial<TournamentRegistrationsRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getRegisteredPlayersIds(\n      tournamentId: string\n    ): Promise<TournamentRegistrationsDto> {\n      return axios\n        .get<TournamentRegistrationsDto>(\n          `${currentConfig.baseUrl}/tournament-registrations/${tournamentId}`\n        )\n        .then((res) => res.data);\n    },\n    async postPlayersForTournament(body: {\n      tournamentId: string;\n      playerId: string;\n    }): Promise<void> {\n      await axios.post(\n        `${currentConfig.baseUrl}/tournament-registrations/${body.tournamentId}/players`,\n        body\n      );\n    },\n    async closeTournamentRegistration(tournamentId: string): Promise<void> {\n      await axios.post(\n        `${currentConfig.baseUrl}/tournament-registrations/${tournamentId}/close`,\n        null,\n        { params: { tournamentId } }\n      );\n    },\n  };\n};\n","const { makeStyles } = require(\"@material-ui/core\");\n\nconst useStyles = makeStyles((theme) => ({\n  colors: {\n    color: \"#000000 !important\",\n    backgroundColor: \"#FFB400 !important\",\n  },\n}));\n\nexport default useStyles;\n","import useStyles from \"./styles\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst Notification = (props: {\n  text: string;\n  open: boolean;\n  handleClose: () => void;\n  isError: boolean;\n}) => {\n  const classes = useStyles();\n\n  return props.isError ? (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={3000}\n      onClose={props.handleClose}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n    >\n      <Alert onClose={props.handleClose} severity=\"error\">\n        {props.text}\n      </Alert>\n    </Snackbar>\n  ) : (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={3000}\n      onClose={props.handleClose}\n    >\n      <Alert\n        onClose={props.handleClose}\n        className={classes.colors}\n        icon={false}\n      >\n        {props.text}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { MIN_CARD_COMPONENT_WIDTH } from \"../../atoms/constants/sizes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: MIN_CARD_COMPONENT_WIDTH,\n  },\n}));\n\nexport default useStyles;\n","import { createContext } from \"react\";\n\nexport const tournamentRegistrationsContext = {\n  openCreatePlayerProfileForm: false,\n  toggleOpenFormState: () => {},\n  onPlayerProfileCreated: (name: string, surname: string) => {},\n  registerPlayer: async (playerId: string) => {},\n};\n\nexport const TournamentRegistrationsContext = createContext(\n  tournamentRegistrationsContext\n);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Button, Drawer, Grid } from \"@material-ui/core\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { TournamentRegistrationsContext } from \"./Context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TournamentRegistrationsRestApi } from \"../../../restapi/tournament-registrations\";\nimport Notification from \"../Notification/Notification\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const RegistrationsActionDrawer = (props: {\n  openDrawer: boolean;\n  returnToPrevState: (prevState: boolean) => void;\n  tournamentId: string;\n}) => {\n  const { toggleOpenFormState } = useContext(TournamentRegistrationsContext);\n  const [drawerOpened, setDrawerOpened] = useState<boolean>(false);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n\n  useEffect(() => {\n    setDrawerOpened(props.openDrawer);\n\n    return () => {\n      setDrawerOpened(false);\n    };\n  }, [props.openDrawer]);\n\n  const history = useHistory();\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const onNotificationOpen = (errorMessage: string) => {\n    setTextAlert(errorMessage);\n    setOpenAlert(true);\n  };\n\n  const onNotificationClose = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  function toggleDrawer(open: boolean) {\n    props.returnToPrevState(false);\n    setDrawerOpened(open);\n  }\n\n  const startTournament = async () => {\n    try {\n      await TournamentRegistrationsRestApi().closeTournamentRegistration(\n        props.tournamentId\n      );\n      toggleDrawer(false);\n      goBack();\n    } catch (error) {\n      onNotificationOpen(error.response.data.message);\n    }\n  };\n\n  const useStyles = makeStyles(() => ({\n    width: {\n      width: \"70%\",\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <>\n      <Drawer\n        anchor={\"bottom\"}\n        open={drawerOpened}\n        onClose={() => toggleDrawer(false)}\n      >\n        <Grid\n          container\n          direction={\"column\"}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <VerticalSpace height=\"30px\" />\n          <Button\n            className={classes.width}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              toggleOpenFormState();\n              toggleDrawer(false);\n            }}\n          >\n            Dodaj i zapisz zawodnika\n          </Button>\n          <VerticalSpace height=\"20px\" />\n          <Button\n            className={classes.width}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={startTournament}\n          >\n            Zakończ zapisy na turniej\n          </Button>\n          <VerticalSpace height=\"30px\" />\n        </Grid>\n      </Drawer>\n      <Notification\n        text={textAlert}\n        open={openAlert}\n        handleClose={onNotificationClose}\n        isError={true}\n      />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { RegistrationsActionDrawer } from \"./RegistrationsActionDrawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopNavBar = (props: { tournamentId: string }) => {\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const history = useHistory();\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const useStyles = makeStyles(() => ({\n    padding: {\n      padding: 0,\n      paddingTop: \"2px\",\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\n        <Box>\n          <IconButton className={classes.padding} onClick={goBack}>\n            <ArrowBackIosIcon />\n          </IconButton>\n        </Box>\n        <Box flexGrow={1} textAlign=\"center\">\n          <Typography component=\"h6\" variant=\"h6\">\n            Zapisy na turniej\n          </Typography>\n        </Box>\n        <Box>\n          <IconButton\n            data-testid=\"hamburgerMenu\"\n            className={classes.padding}\n            onClick={() => setOpenDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Box>\n      </Box>\n      <RegistrationsActionDrawer\n        openDrawer={openDrawer}\n        returnToPrevState={setOpenDrawer}\n        tournamentId={props.tournamentId}\n      />\n    </>\n  );\n};\n","import { v4 as uuid } from \"uuid\";\n\nexport class EntityIdGenerator {\n  static generate(): string {\n    return uuid();\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { UserProfileRestApi } from \"../../../restapi/players-profiles\";\nimport { EntityIdGenerator } from \"../../idGenerator/EntityIdGenerator\";\nimport { TournamentRegistrationsRestApi } from \"../../../restapi/tournament-registrations\";\nimport { TournamentRegistrationsContext } from \"../TournamentRegistrationsComponents/Context\";\nimport Notification from \"../Notification/Notification\";\n\nconst validationSchema = yup.object({\n  name: yup.string().required(\"To pole jest wymagane.\"),\n  surname: yup.string().required(\"To pole jest wymagane.\"),\n  email: yup\n    .string()\n    .email(\"Niepoprawny adres e-mail.\")\n    .required(\"To pole jest wymagane.\"),\n  phone: yup\n    .string()\n    .min(9, \"Wprowadź przynajmniej 9 znaków.\")\n    .required(\"To pole jest wymagane.\"),\n});\n\nfunction CreatePlayerProfileForm(props: {\n  onDrawerClose: () => void;\n  tournamentId: string;\n}) {\n  const { onPlayerProfileCreated } = useContext(TournamentRegistrationsContext);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n\n  const onNotificationOpen = (errorMessage: string) => {\n    setTextAlert(errorMessage);\n    setOpenAlert(true);\n  };\n\n  const onNotificationClose = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values) => {\n      try {\n        const playerId = EntityIdGenerator.generate();\n        await UserProfileRestApi().postPlayersProfile({\n          playerId: playerId,\n          firstName: values.name,\n          lastName: values.surname,\n          phoneNumber: values.phone,\n          emailAddress: values.email,\n        });\n        await TournamentRegistrationsRestApi().postPlayersForTournament({\n          tournamentId: props.tournamentId,\n          playerId: playerId,\n        });\n        props.onDrawerClose();\n        onPlayerProfileCreated(values.name, values.surname);\n      } catch (error) {\n        onNotificationOpen(error.response.data.message);\n      }\n    },\n  });\n\n  return (\n    <Grid container direction={\"column\"} justify=\"center\" alignItems=\"center\">\n      <VerticalSpace height=\"10px\" />\n      <Typography component=\"h6\" variant=\"h6\">\n        Nowy zawodnik\n      </Typography>\n      <VerticalSpace height=\"10px\" />\n\n      <form onSubmit={formik.handleSubmit}>\n        <Grid\n          container\n          direction={\"column\"}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <TextField\n            id=\"Imię\"\n            value={formik.values.name}\n            label=\"Imię\"\n            name=\"name\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.name && Boolean(formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n          />\n          <VerticalSpace height=\"10px\" />\n\n          <TextField\n            id=\"Nazwisko\"\n            value={formik.values.surname}\n            label=\"Nazwisko\"\n            name=\"surname\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.surname && Boolean(formik.errors.surname)}\n            helperText={formik.touched.surname && formik.errors.surname}\n          />\n          <VerticalSpace height=\"10px\" />\n\n          <TextField\n            id=\"Adres e-mail\"\n            value={formik.values.email}\n            label=\"Adres e-mail\"\n            name=\"email\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <VerticalSpace height=\"10px\" />\n\n          <TextField\n            id=\"Numer telefonu\"\n            value={formik.values.phone}\n            label=\"Numer telefonu\"\n            name=\"phone\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            error={formik.touched.phone && Boolean(formik.errors.phone)}\n            helperText={formik.touched.phone && formik.errors.phone}\n          />\n\n          <VerticalSpace height=\"1rem\" />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Zapisz zawodnika\n          </Button>\n          <VerticalSpace height=\"1rem\" />\n        </Grid>\n      </form>\n      <Notification\n        text={textAlert}\n        open={openAlert}\n        handleClose={onNotificationClose}\n        isError={true}\n      />\n    </Grid>\n  );\n}\n\nexport default CreatePlayerProfileForm;\n","export enum MatchStatus {\n   FINISHED = \"Zakończony\",\n   STARTED = \"ROZPOCZĘTY\",\n   NO_TABLE = \"Oczekujący\",\n   NO_TEAMS = \"Brak graczy\",\n   NO_ONE_TEAM = \"Brak drugiego teamu\",\n   STATUS_NOT_EXIST = \"---\",\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport CreatePlayerProfileForm from \"../CreatePlayerProfileForm/CreatePlayerProfileForm\";\nimport { TournamentRegistrationsContext } from \"./Context\";\n\nexport const CreatePlayerProfileDrawer = (props: { tournamentId: string }) => {\n  const { openCreatePlayerProfileForm, toggleOpenFormState } = useContext(\n    TournamentRegistrationsContext\n  );\n  const [drawerOpened, setDrawerOpened] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (openCreatePlayerProfileForm) {\n      setDrawerOpened(true);\n      toggleOpenFormState();\n    }\n  }, [openCreatePlayerProfileForm]);\n\n  const toggleDrawer = (open: boolean) => () => {\n    setDrawerOpened(open);\n  };\n\n  const onDrawerClose = () => {\n    setDrawerOpened(false);\n  };\n\n  return (\n    <Drawer anchor={\"bottom\"} open={drawerOpened} onClose={toggleDrawer(false)}>\n      <CreatePlayerProfileForm\n        onDrawerClose={onDrawerClose}\n        tournamentId={props.tournamentId}\n      />\n    </Drawer>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { Button } from \"@material-ui/core\";\nimport { TournamentRegistrationsContext } from \"./Context\";\n\nexport const PlayerNotFound = () => {\n  const { toggleOpenFormState } = useContext(TournamentRegistrationsContext);\n\n  return (\n    <Centered>\n      <Alert severity=\"info\">\n        <AlertTitle>Nie znaleziono zawodnika?</AlertTitle>\n        Zapisz nowego poniżej.\n      </Alert>\n      <VerticalSpace height=\"1rem\" />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => toggleOpenFormState()}\n      >\n        Dodaj i zapisz\n      </Button>\n    </Centered>\n  );\n};\n","import { PlayerProfileDto } from \"../../../restapi/players-profiles\";\nimport React, { useContext } from \"react\";\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { AddCircleOutline, SupervisedUserCircle } from \"@material-ui/icons\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { TournamentRegistrationsContext } from \"./Context\";\n\nexport const PlayersListItem = (props: {\n  player: PlayerProfileDto;\n  isRegistered: boolean;\n}) => {\n  const { registerPlayer } = useContext(TournamentRegistrationsContext);\n\n  function registeredPlayerIcon() {\n    return (\n      <CheckCircleIcon\n        color=\"action\"\n        aria-label=\"registered-player\"\n        data-testid=\"registered-player\"\n      />\n    );\n  }\n\n  function registerPlayerIcon() {\n    return (\n      <IconButton\n        edge=\"end\"\n        aria-label=\"register-player\"\n        data-testid=\"register-player\"\n        onClick={() => registerPlayer(props.player.playerId)}\n      >\n        <AddCircleOutline />\n      </IconButton>\n    );\n  }\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>\n          <SupervisedUserCircle />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={`${props.player.firstName} ${props.player.lastName}`}\n        secondary={props.player.emailAddress}\n      />\n      <ListItemSecondaryAction>\n        {props.isRegistered ? registeredPlayerIcon() : registerPlayerIcon()}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import { PlayerProfileDto } from \"../../../restapi/players-profiles\";\nimport { List } from \"@material-ui/core\";\nimport React from \"react\";\nimport { PlayerNotFound } from \"./PlayerNotFound\";\nimport { PlayersListItem } from \"./PlayersListItem\";\n\nexport const PlayersList = (props: {\n  players: PlayerProfileDto[];\n  registeredPlayersIds: string[];\n}) => {\n  if (props.players.length === 0) {\n    return <PlayerNotFound />;\n  }\n\n  return (\n    <List>\n      {props.players.map((player) => {\n        const isRegistered: boolean = props.registeredPlayersIds.includes(\n          player.playerId\n        );\n        return (\n          <PlayersListItem\n            key={player.playerId}\n            player={player}\n            isRegistered={isRegistered}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport {\n  PlayerProfileDto,\n  UserProfileRestApi,\n} from \"../../../restapi/players-profiles\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport { TournamentRegistrationsRestApi } from \"../../../restapi/tournament-registrations\";\nimport Notification from \"../../organisms/Notification/Notification\";\nimport useStyles from \"./styles\";\nimport { TopNavBar } from \"../../organisms/TournamentRegistrationsComponents/TopNavBar\";\nimport { CreatePlayerProfileDrawer } from \"../../organisms/TournamentRegistrationsComponents/CreatePlayerProfileDrawer\";\nimport { PlayersList } from \"../../organisms/TournamentRegistrationsComponents/PlayersList\";\nimport {\n  TournamentRegistrationsContext,\n  tournamentRegistrationsContext,\n} from \"../../organisms/TournamentRegistrationsComponents/Context\";\n\nexport type TournamentRegistrationsProps = {\n  readonly tournamentId: string;\n};\n\nexport const TournamentRegistrations = (\n  props: TournamentRegistrationsProps\n) => {\n  const searchInput = useRef<HTMLInputElement>(null);\n  const [openAlert, setOpenAlert] = useState(false);\n  const [textAlert, setTextAlert] = useState(\"\");\n  const [availablePlayers, setAvailablePlayers] = useState<\n    PlayerProfileDto[] | undefined\n  >(undefined);\n  const [filteredPlayers, setFilteredPlayers] = useState<PlayerProfileDto[]>(\n    []\n  );\n  const [registeredPlayersIds, setRegisteredPlayersIds] = useState<string[]>(\n    []\n  );\n\n  const [\n    openCreatePlayerProfileForm,\n    setOpenCreatePlayerProfileForm,\n  ] = useState(tournamentRegistrationsContext.openCreatePlayerProfileForm);\n  const toggleOpenFormState = () => {\n    setOpenCreatePlayerProfileForm((prevValue) => !prevValue);\n  };\n  const onPlayerProfileCreated = (name: string, surname: string) => {\n    onNotificationOpen(name, surname);\n    refreshPlayersAndResetSearchingInput();\n  };\n  const registerPlayer = async (playerId: string) => {\n    await TournamentRegistrationsRestApi().postPlayersForTournament({\n      tournamentId: props.tournamentId,\n      playerId: playerId,\n    });\n    await reloadRegisteredPlayers();\n\n    onNotificationOpen();\n  };\n\n  useEffect(() => {\n    getPlayersProfiles().then();\n  }, []);\n\n  useEffect(() => {\n    reloadRegisteredPlayers().then();\n  }, [props.tournamentId]);\n\n  function getPlayersProfiles() {\n    return UserProfileRestApi()\n      .getPlayersProfiles()\n      .then((playerProfilesList) => {\n        setAvailablePlayers(playerProfilesList.items);\n        setFilteredPlayers(playerProfilesList.items);\n      });\n  }\n\n  function reloadRegisteredPlayers() {\n    return TournamentRegistrationsRestApi()\n      .getRegisteredPlayersIds(props.tournamentId)\n      .then((tournamentRegistrations) => {\n        setRegisteredPlayersIds(tournamentRegistrations.registeredPlayersIds);\n      });\n  }\n\n  function onPlayerSearch(searchInput: string) {\n    if (searchInput.trim() === \"\") {\n      setFilteredPlayers(availablePlayers ?? []);\n    } else {\n      setFilteredPlayers(\n        (availablePlayers ?? []).filter((player) =>\n          `${player.firstName} ${player.lastName} ${player.emailAddress}`.includes(\n            searchInput.trim()\n          )\n        )\n      );\n    }\n  }\n\n  const refreshPlayersAndResetSearchingInput = () => {\n    getPlayersProfiles().then();\n    reloadRegisteredPlayers().then();\n\n    if (searchInput && searchInput.current) {\n      searchInput.current.value = \"\";\n    }\n  };\n\n  const onNotificationOpen = (name: string = \"\", surname: string = \"\") => {\n    name && surname\n      ? setTextAlert(\n          `Pomyślnie utworzono konto ${name} ${surname} oraz zapisano na turniej`\n        )\n      : setTextAlert(\"Pomyślnie zapisano zawodniczkę / zawodnika na turniej\");\n    setOpenAlert(true);\n  };\n\n  const onNotificationClose = (\n    event?: React.SyntheticEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenAlert(false);\n  };\n\n  //TODO: Add REST API error handling\n  const isLoading = availablePlayers === undefined;\n  const classes = useStyles();\n  return (\n    <TournamentRegistrationsContext.Provider\n      value={{\n        openCreatePlayerProfileForm,\n        toggleOpenFormState,\n        onPlayerProfileCreated,\n        registerPlayer,\n      }}\n    >\n      <Card className={classes.root}>\n        <CardContent>\n          <Centered>\n            <TopNavBar tournamentId={props.tournamentId} />\n            <VerticalSpace height=\"1rem\" />\n\n            {isLoading ? (\n              <CircularProgress data-testid=\"TournamentRegistrationsLoadingIndicator\" />\n            ) : (\n              <>\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"player-search-input\">\n                    Zawodnik\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"player-search-input\"\n                    inputRef={searchInput}\n                    onChange={(event) => onPlayerSearch(event.target.value)}\n                    endAdornment={<Search />}\n                    labelWidth={70}\n                  />\n                </FormControl>\n                <VerticalSpace height=\"1rem\" />\n                <PlayersList\n                  players={filteredPlayers}\n                  registeredPlayersIds={registeredPlayersIds}\n                />\n              </>\n            )}\n\n            <Notification\n              text={textAlert}\n              open={openAlert}\n              handleClose={onNotificationClose}\n              isError={false}\n            />\n            <CreatePlayerProfileDrawer tournamentId={props.tournamentId} />\n          </Centered>\n        </CardContent>\n      </Card>\n    </TournamentRegistrationsContext.Provider>\n  );\n};\n","import { useRouteMatch } from \"react-router-dom\";\nimport React from \"react\";\nimport { TournamentRegistrations } from \"../TournamentRegistrations\";\n\nexport interface TournamentRegistrationsRouteParams {\n  readonly tournamentId: string;\n}\n\nexport const TournamentRegistrationsRoute = () => {\n  const match = useRouteMatch<TournamentRegistrationsRouteParams>(\n    \"/tournament-registration/:tournamentId\"\n  );\n  const tournamentId = match?.params.tournamentId;\n  if (!tournamentId) {\n    return null;\n  }\n  return <TournamentRegistrations tournamentId={tournamentId} />;\n};\n","import styled from \"styled-components\";\nimport {PATH_FOR_IMAGES} from \"../constants/imgPaths\";\n\nexport const StyledBackground = styled(\"div\")({\n  backgroundImage: `url(\"${PATH_FOR_IMAGES}/background.png\")`,\n  backgroundPosition: \"center\",\n  backgroundSize: \"cover\",\n  backgroundRepeat: \"no-repeat\",\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  width: \"100vw\",\n  height: \"100vh\",\n  zIndex: -1,\n});\n","import React from 'react';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport {Card} from '@material-ui/core';\nimport {MatchStatus} from \"../../atoms/MatchStatus\";\n\nexport type MatchTeamProps = {\n   readonly player1: string | undefined;\n   readonly player2: string | undefined;\n   readonly teamId:  string | undefined;\n   readonly isWinnerTeam: boolean;\n   readonly matchStatus: MatchStatus;\n};\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n   },\n\n   teamItem: {\n      boxSizing: \"border-box\",\n      display: \"inline-flex\",\n      width: '100%',\n      paddingLeft: \"30px\",\n   },\n\n   avatar: {\n      padding: \"15px 0\"\n   },\n\n   avatarColor: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      backgroundColor: theme.palette.primary.main,\n   },\n\n   inline: {\n      display: 'inline',\n   },\n\n   waitingForTeam: {\n      display: 'inline',\n      color: 'red'\n   },\n\n}));\n\nexport const MatchTeam = ({\n                             player1,\n                             player2,\n                             isWinnerTeam,\n                             teamId,\n                             matchStatus\n                          }: MatchTeamProps) => {\n   const classes = useStyles();\n\n   const isMatchWaitingForPlayers = Boolean(matchStatus === MatchStatus.NO_ONE_TEAM);\n\n   const isWaitingForThisTeam = !(teamId);\n   const WaitingForTeam = <span className={classes.waitingForTeam}>\"Oczekiwanie na drużynę\"</span>;\n\n   const player1Text = player1 || \"player1\";\n   const player2Text = player2 || \"player2\";\n\n   const playersNameText = <><span className={classes.inline}>{player1Text}</span><br/><span\n      className={classes.inline}> & {player2Text} </span></>;\n   const avatarSymbol = (player1Text[0].toUpperCase() + player2Text[0].toUpperCase())\n   const playersTitle = isWaitingForThisTeam ? WaitingForTeam : playersNameText;\n\n   const isWaitingForEnemyTeamDescription = (matchStatus === MatchStatus.NO_ONE_TEAM) && !isWaitingForThisTeam;\n   const WaitingForEnemyTeamDescription = (\n      <>\n         \"Oczekiwanie na\n         <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n         >\n            {isMatchWaitingForPlayers ? ` przeciwnika` : ` stół`}\n\n         </Typography>\n         \".\n      </>\n   )\n\n   const isStartedMatchDescription = matchStatus === MatchStatus.STARTED;\n   const ReadyToStartMatchDescription = (\n      <>\n         Aby ustawić zwycięzcę -\n         <Typography\n            component=\"span\"\n\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n         >\n            Kliknij tu!\n         </Typography>\n      </>\n   )\n\n   const isFinishedMatchDescription = matchStatus === MatchStatus.FINISHED;\n   const FinishedMatchDescription = (\n      <Typography\n         component=\"span\"\n         variant=\"body2\"\n         className={classes.inline}\n         color=\"textPrimary\"\n      >\n         {isWinnerTeam ? `Zwycięzca!` : `Przegrany!`}\n      </Typography>\n   )\n\n   return (\n      <Card className={classes.teamItem}>\n\n         <ListItemAvatar className={classes.avatar}>\n            <Avatar className={classes.avatarColor}>{isWaitingForThisTeam ? \"...\" : avatarSymbol}</Avatar>\n         </ListItemAvatar>\n\n         <ListItemText\n            primary={playersTitle}\n            secondary=\n               {<>\n                  {isFinishedMatchDescription && FinishedMatchDescription}\n                  {isStartedMatchDescription && ReadyToStartMatchDescription}\n                  {isWaitingForEnemyTeamDescription && WaitingForEnemyTeamDescription}\n               </>}\n         />\n      </Card>\n   )\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {TransitionProps} from '@material-ui/core/transitions';\nimport {Card, withStyles} from \"@material-ui/core\";\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype MatchWinnerDeterminationDialogProps = {\n    agreeCallback: (() => void),\n    isOpen: boolean\n    teamName: number | string | undefined;\n}\n\nconst FullParentButton = withStyles({\n    root: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        opacity: 0,\n\n    }\n})(Card);\n\nexport default function MatchWinnerDeterminationDialog(props: MatchWinnerDeterminationDialogProps) {\n    const [open, setOpen] = React.useState(props.isOpen);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleAgreeAndClose = () => {\n        setOpen(false);\n        props.agreeCallback();\n    };\n\n    return (\n        <div>\n            <FullParentButton variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n            </FullParentButton>\n            <Dialog\n                open={open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Czy ustawić zwycięzcę meczu?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Czy aby na pewno chcesz ustawić drużynę '{props.teamName || \"NN\"}' jako zwycięzcę tego meczu?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Odrzuć\n                    </Button>\n                    <Button onClick={handleAgreeAndClose} color=\"primary\">\n                        Zaakceptuj\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport styled from \"styled-components\";\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Avatar, Card, Typography, withStyles} from '@material-ui/core';\nimport {MatchTeam} from \"../MatchTeam/MatchTeam\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {THEME} from \"../../atoms/constants/ThemeMUI\";\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\nimport MatchWinnerDeterminationDialog from \"../MatchWinnerDeterminationDialog/MatchWinnerDeterminationDialog\";\nimport {MatchStatus} from \"../../atoms/MatchStatus\";\n\nexport type MatchItemProps = {\n   onClickTeam: (matchId: string, teamId: string) => void,\n   matchNumber: number | undefined,\n   matchId: string | undefined,\n   level: number | undefined,\n   matchStatus: MatchStatus,\n   winnerTeamId: string | undefined;\n   team1: {\n      readonly player1: string | undefined;\n      readonly player2: string | undefined;\n      readonly teamId: string | undefined;\n   },\n   team2: {\n      readonly player1: string | undefined;\n      readonly player2: string | undefined;\n      readonly teamId: string | undefined;\n   },\n\n   expanded: string | boolean,\n   handleChangeExpander: (panel: string | boolean) => (event: any, isExpanded: string | boolean) => void,\n};\n\nconst TeamHoverButton = styled(\"div\")({\n   \"zIndex\": 1,\n   boxSizing: \"border-box\",\n   display: 'inline-flex',\n   position: \"absolute\",\n   width: \"100%\",\n   height: \"100%\",\n   margin: 0,\n   padding: 0,\n   \"justify-content\": \"center\",\n   \"align-items\": \"center\",\n   fontSize: \"65px\",\n   backgroundColor: THEME.palette.success.light,\n   opacity: 0,\n   cursor: \"pointer\",\n   transition: \"opacity 1s\",\n   '&:hover': {\n      opacity: 0.8,\n   },\n});\n\nconst MatchTeamWrapper = styled(Card)({\n   position: \"relative\",\n   margin: \"3px\"\n});\n\nconst StyledAccordionDetails = styled(AccordionDetails)({\n   display: \"flex\",\n   flexDirection: \"column\",\n   backgroundColor: THEME.palette.background.default,\n});\n\nconst StyledAvatar = withStyles({\n   root: {\n      color: THEME.palette.getContrastText(THEME.palette.secondary.main),\n      backgroundColor: THEME.palette.secondary.main,\n   },\n})(Avatar);\n\nconst MatchItemWrapper = withStyles({\n   root: {\n      width: \"100%\"\n   }\n})(Card);\n\nexport const MatchItem = (props: MatchItemProps,) => {\n\n   const isWinnerTeam1 = props.winnerTeamId === props.team1.teamId;\n   const isWinnerTeam2 = props.winnerTeamId === props.team2.teamId;\n\n   const isMatchFinished = props.matchStatus === MatchStatus.FINISHED;\n   const isMatchStarted = props.matchStatus === MatchStatus.STARTED;\n\n   const agreeDialogCallback = (matchId: string, teamName: string): void => props.onClickTeam(matchId, teamName);\n\n\n   const TeamHoverButtonComponent = (p: { matchId: string | undefined, teamId: string | undefined }) => {\n      const matchId = p.matchId;\n      const teamId = p.teamId;\n\n      if (!matchId || !teamId) return <div/>;\n\n      return (\n         <TeamHoverButton>\n            <AddCircleTwoToneIcon fontSize=\"inherit\"/>\n            <MatchWinnerDeterminationDialog\n               agreeCallback={() => agreeDialogCallback(matchId, teamId)}\n               isOpen={false}\n               teamName={teamId}\n            />\n         </TeamHoverButton>\n      );\n   }\n\n   return (\n      <MatchItemWrapper elevation={3}>\n         <Accordion expanded={props.expanded === `panel${props.matchNumber}`}\n                    onChange={props.handleChangeExpander(`panel${props.matchNumber}`)}>\n            <AccordionSummary\n               expandIcon={<ExpandMoreIcon/>}\n               aria-controls=\"panel1bh-content\"\n               id=\"panel1bh-header\"\n            >\n               <ListItemAvatar>\n                  <StyledAvatar>{props.matchNumber}</StyledAvatar>\n               </ListItemAvatar>\n\n               <ListItemText\n                  primary={`- ${props.matchStatus} -`}\n                  secondary={\n                     <React.Fragment>\n                        <Typography\n                           component=\"span\"\n                           variant=\"body2\"\n                           display=\"inline\"\n                           color=\"textPrimary\"\n                        >\n                           {`Numer meczu: `}\n                        </Typography>\n                        {(props.matchNumber || props.matchNumber === 0) ? props.matchNumber : \"-\"}\n                        <br/>\n                        <Typography\n                           component=\"span\"\n                           variant=\"body2\"\n                           display=\"inline\"\n                           color=\"textPrimary\"\n                        >\n                           {`Poziom: `}\n                        </Typography>\n                        {(props.level || props.level === 0) ? props.level : \"-\"}\n                     </React.Fragment>\n                  }\n               />\n            </AccordionSummary>\n            <StyledAccordionDetails>\n\n               <MatchTeamWrapper>\n\n                  <TeamHoverButtonComponent matchId={props.matchId} teamId={props.team1.teamId}/>\n\n                  <MatchTeam\n                     isWinnerTeam={isWinnerTeam1}\n                     matchStatus={props.matchStatus}\n                     teamId={props.team1.teamId}\n                     player1={props.team1.player1}\n                     player2={props.team1.player2}\n                  />\n\n               </MatchTeamWrapper>\n\n               <MatchTeamWrapper>\n                  <TeamHoverButtonComponent matchId={props.matchId} teamId={props.team2.teamId}/>\n\n\n                  <MatchTeam\n                     isWinnerTeam={isWinnerTeam2}\n                     matchStatus={props.matchStatus}\n                     teamId={props.team2.teamId}\n                     player1={props.team1.player1}\n                     player2={props.team1.player2}\n                  />\n               </MatchTeamWrapper>\n\n            </StyledAccordionDetails>\n         </Accordion>\n      </MatchItemWrapper>\n   )\n};\n\n","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\nimport { MatchesListDto } from \"../../components/organisms/MatchesList/MatchesListDto\";\n\nexport type MatchesListRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: MatchesListRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const MatchesListRestApi = (\n  config?: Partial<MatchesListRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getMatchesList(tournamentId: string): Promise<MatchesListDto> {\n      return axios\n        .get<MatchesListDto>(\n          `${currentConfig.baseUrl}/doubles-tournaments/${tournamentId}/matches`\n        )\n        .then((res) => res.data);\n    },\n  };\n};\n","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\nimport { MatchInformationDto } from \"../../components/organisms/MatchesList/MatchInformationDto\";\n\nexport type MatchInformationRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: MatchInformationRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const MatchInformationRestApi = (\n  config?: Partial<MatchInformationRestApiConfig>\n) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getMatchesList(matchId: string): Promise<MatchInformationDto> {\n      return axios\n        .get<MatchInformationDto>(`${currentConfig.baseUrl}/matches/${matchId}`)\n        .then((res) => res.data);\n    },\n\n    async postMatchWinner(\n      matchId: string,\n      winnerPlayerId: string\n    ): Promise<void> {\n      await axios.post(`${currentConfig.baseUrl}/matches/${matchId}/result`, {\n        winnerId: winnerPlayerId,\n      });\n    },\n  };\n};\n","import axios from \"axios\";\nimport { PATH_BASE_URL } from \"../../components/atoms/constants/apiPaths\";\nimport { TeamsListDto } from \"../../components/organisms/MatchesList/TeamsListDto\";\n\nexport type TeamsListRestApiConfig = {\n  readonly baseUrl: string;\n};\n\nconst defaultConfig: TeamsListRestApiConfig = {\n  baseUrl: PATH_BASE_URL,\n};\n\nexport const TeamsListRestApi = (config?: Partial<TeamsListRestApiConfig>) => {\n  const currentConfig = {\n    ...defaultConfig,\n    config,\n    baseUrl:\n      process.env.REACT_APP_REST_API_BASE_URL ??\n      config?.baseUrl ??\n      defaultConfig.baseUrl,\n  };\n  return {\n    getMatchesList(tournamentId: string): Promise<TeamsListDto> {\n      return axios\n        .get<TeamsListDto>(\n          `${currentConfig.baseUrl}/doubles-tournaments/${tournamentId}/teams`\n        )\n        .then((res) => res.data);\n    },\n  };\n};\n","import React, {useEffect} from 'react';\nimport styled from \"styled-components\";\nimport {Card} from '@material-ui/core';\nimport {MatchItem} from \"../../molecules/MatchItem/MatchItem\";\nimport {MIN_CARD_COMPONENT_WIDTH} from \"../../atoms/constants/sizes\";\nimport {MatchListItem} from \"./MatchListItem\";\nimport {MatchesListRestApi, MatchInformationRestApi} from \"../../../restapi/matches-list\";\nimport {MatchesListDto} from \"./MatchesListDto\";\nimport {MatchStatus} from \"../../atoms/MatchStatus\";\nimport {PlayerProfileDto, UserProfileRestApi} from \"../../../restapi/players-profiles\";\nimport {MatchInformationDto} from \"./MatchInformationDto\";\nimport {TeamsListDto} from \"./TeamsListDto\";\nimport {TeamsListRestApi} from \"../../../restapi/teams-list/TeamsListRestAPI\";\n\nconst StyledMatchesList = styled(Card)({\n   width: MIN_CARD_COMPONENT_WIDTH,\n});\n\nexport type MatchesListProps = {\n   readonly tournamentId: string;\n};\n\nexport const MatchesList = ({tournamentId}: MatchesListProps) => {\n\n   const [expanded, setExpanded] = React.useState<string | boolean>(false);\n   const [matchesListItems, setMatchesListItems] = React.useState<MatchListItem[] | undefined>();\n   const [matchesDetailsListDto, setMatchesDetailsListDto] = React.useState<MatchInformationDto[] | undefined>(undefined);\n   const [teamsListDto, setTeamsListDto] = React.useState<TeamsListDto | undefined>();\n   const [playersProfilesListDto, setPlayersProfilesListDto] = React.useState<PlayerProfileDto[] | undefined>(undefined);\n\n   useEffect(() => {\n      reloadAllList()\n   }, [tournamentId]);\n\n   useEffect(() => {\n      if (!matchesListItems) return;\n\n      Promise.all(matchesListItems\n         .map((matchListItem) => getMatchInformationDto(`${tournamentId}_${matchListItem.matchNumber}`)))\n         .then(matchesDetails => setMatchesDetailsListDto(matchesDetails))\n\n      getTeamsListDto(tournamentId)\n         .then(teamsListDto => setTeamsListDto(teamsListDto))\n\n   }, [matchesListItems]);\n\n   useEffect(() => {\n      async function setPlayersProfilesList(): Promise<void> {\n         if (!teamsListDto) return;\n\n         const tournamentPlayersIds = teamsListDto.items\n            .map(({firstTeamPlayer, secondTeamPlayer}) =>\n               [firstTeamPlayer, secondTeamPlayer]\n            ).reduce((acc, teamPlayers) => acc.concat(teamPlayers))\n\n         const playersProfilesList = await Promise.all(tournamentPlayersIds.map((item) => getPlayerProfileDto(item)));\n         setPlayersProfilesListDto(playersProfilesList);\n      }\n\n      setPlayersProfilesList().then();\n   }, [teamsListDto]);\n\n   const handleChangeExpander = (panel: string | boolean) => (event: any, isExpanded: string | boolean) => {\n      setExpanded(isExpanded ? panel : false);\n   };\n\n   function reloadAllList() {\n      MatchesListRestApi()\n         .getMatchesList(tournamentId)\n         .then((matchesListDto) => {\n            const newMatchesListItems = returnMatchListItemsFromMatchesListDto(matchesListDto, reloadAllList);\n            setMatchesListItems(newMatchesListItems)\n         });\n   }\n\n   return (\n      <StyledMatchesList>\n         {matchesListItems ? matchesListItems.map((item, index) => returnMatchItem(item, index, expanded, handleChangeExpander)) : \"Oczekiwanie na pobranie...\"}\n      </StyledMatchesList>\n   )\n};\n\nconst returnMatchItem = (matchItemBase: MatchListItem, index: number, expanded: string | boolean, handleChangeExpander: (panel: string | boolean) => (event: any, isExpanded: string | boolean) => void) => (\n   <MatchItem\n      level={matchItemBase.level}\n      matchNumber={matchItemBase.matchNumber}\n      matchId={matchItemBase.matchId}\n      matchStatus={matchItemBase.matchStatus}\n      onClickTeam={matchItemBase.onClickTeam}\n      team1={matchItemBase.team1}\n      team2={matchItemBase.team2}\n      winnerTeamId={matchItemBase.winnerId}\n      key={matchItemBase.matchNumber}\n      expanded={expanded}\n      handleChangeExpander={handleChangeExpander}\n   />\n)\n\nconst returnMatchListItemsFromMatchesListDto = (matchesListDto: MatchesListDto, reloadAllList: () => void): MatchListItem[] => {\n   return matchesListDto.queue.map((matchesItem) => {\n\n      function findStatus(): MatchStatus {\n         if (matchesItem.status === \"started\") return MatchStatus.STARTED;\n         if (matchesItem.status === \"ended\") return MatchStatus.FINISHED;\n         if (matchesItem.status === \"enqueued\") return MatchStatus.NO_TABLE;\n         if (matchesItem.status === \"noTeams\") {\n            if (matchesItem.team1Id || matchesItem.team1Id) return MatchStatus.NO_ONE_TEAM;\n            return MatchStatus.NO_TEAMS;\n         }\n         return MatchStatus.STATUS_NOT_EXIST;\n      }\n\n      return {\n         onClickTeam: (matchId: string, winnerPlayerId: string) => setMatchWinner(matchId, winnerPlayerId, reloadAllList),\n         matchNumber: matchesItem.matchNumber,\n         matchId: `${matchesListDto.tournamentId}_${matchesItem.matchNumber}`,\n         winnerId: undefined,\n         level: undefined,\n         matchStatus: findStatus(),\n         team1: {\n            player1: undefined,\n            player2: undefined,\n            teamId: matchesItem.team1Id,\n            currentPlayerLevel: undefined,\n            currentMatchNumber: undefined,\n         },\n         team2: {\n            player1: undefined,\n            player2: undefined,\n            teamId: matchesItem.team2Id,\n            currentPlayerLevel: undefined,\n            currentMatchNumber: undefined,\n         }\n      }\n   })\n}\n\nconst getMatchInformationDto = (matchId: string): Promise<MatchInformationDto> => MatchInformationRestApi()\n   .getMatchesList(matchId)\n   .then(matchInformationDto => ({\n      matchId: matchInformationDto.matchId,\n      firstMatchSideId: matchInformationDto.firstMatchSideId,\n      secondMatchSideId: matchInformationDto.secondMatchSideId,\n      winnerId: matchInformationDto.winnerId\n   }));\n\n\nconst getPlayerProfileDto = (playerId: string): Promise<PlayerProfileDto> => UserProfileRestApi()\n   .getPlayerProfile(playerId)\n   .then(playerProfileDto => ({\n      playerId: playerProfileDto.playerId,\n      firstName: playerProfileDto.firstName,\n      lastName: playerProfileDto.lastName,\n      phoneNumber: playerProfileDto.phoneNumber,\n      emailAddress: playerProfileDto.emailAddress,\n   }));\n\n\nconst getTeamsListDto = (tournamentId: string): Promise<TeamsListDto> => TeamsListRestApi()\n   .getMatchesList(tournamentId)\n   .then(teamsList => teamsList);\n\nconst setMatchWinner = (matchId: string, winnerPlayerId: string, reloadAllList: () => void) => MatchInformationRestApi()\n   .postMatchWinner(matchId, winnerPlayerId)\n   .then(() => reloadAllList());\n\n\n","import { useRouteMatch } from \"react-router-dom\";\nimport React from \"react\";\nimport {PATH_FOR_PLAYER_MATCHES_VIEW} from \"../../atoms/constants/routerPaths\";\nimport {MatchesList} from \"../../organisms/MatchesList/MatchesList\";\n\nexport interface MatchesListRouteParams {\n  readonly tournamentId: string;\n}\n\nexport const MatchesListRoute = () => {\n  const match = useRouteMatch<MatchesListRouteParams>(\n      PATH_FOR_PLAYER_MATCHES_VIEW\n  );\n  const tournamentId = match?.params.tournamentId;\n  if (!tournamentId) {\n    return null;\n  }\n  return <MatchesList tournamentId={tournamentId} />;\n};\n","import React from \"react\";\nimport { Button, Grid, MuiThemeProvider } from \"@material-ui/core\";\nimport { Centered } from \"../../atoms/Shared/Centered\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { THEME } from \"../../atoms/constants/ThemeMUI\";\nimport Footer from \"../../organisms/Footer/Footer\";\nimport { HomeMenu } from \"../HomeMenu/HomeMenu\";\nimport { VerticalSpace } from \"../../atoms/Shared/VerticalSpace\";\nimport Header from \"../../organisms/Header/Header\";\nimport { TournamentRegistrationsRoute } from \"../Routes/TournamentRegistrationsRoutes\";\nimport { StyledBackground } from \"../../atoms/Background/StyledBackground\";\nimport {\n  PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW,\n  PATH_FOR_HOME_VIEW,\n  PATH_FOR_LOGIN_VIEW,\n  PATH_FOR_PLAYER_MATCHES_VIEW,\n  PATH_FOR_PLAYER_PROFILE_CREATION_VIEW,\n  PATH_FOR_PLAYERS_PROFILES_VIEW,\n  PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW,\n  PATH_FOR_TOURNAMENTS_SELECTION_VIEW\n} from \"../../atoms/constants/routerPaths\";\nimport {MatchesList} from \"../../organisms/MatchesList/MatchesList\";\nimport {MatchesListRoute} from \"../Routes/MatchesListRoutes\";\n\nfunction TourDeFoos() {\n  return (\n    <Router>\n      <StyledBackground />\n      <MuiThemeProvider theme={THEME}>\n        <Centered>\n          <Header />\n          <VerticalSpace height=\"20px\" />\n          <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: \"75vh\" }}\n          >\n            <Switch>\n              <Route path={PATH_FOR_LOGIN_VIEW} exact>\n                <Button>PATH_FOR_LOGIN_VIEW</Button>\n              </Route>\n              <Route path={PATH_FOR_TOURNAMENTS_SELECTION_VIEW} exact>\n                PATH_FOR_TOURNAMENTS_SELECTION_VIEW\n              </Route>\n              <Route path={PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW} exact>\n                PATH_FOR_CREATING_NEW_TOURNAMENT_VIEW\n              </Route>\n              <Route\n                path={PATH_FOR_TOURNAMENT_REGISTRATIONS_VIEW + `/:tournamentId`}\n              >\n                <Centered>\n                  <TournamentRegistrationsRoute />\n                </Centered>\n              </Route>\n              <Route path={PATH_FOR_PLAYERS_PROFILES_VIEW} exact>\n                PATH_FOR_PLAYERS_PROFILES_VIEW\n              </Route>\n              <Route path={PATH_FOR_PLAYER_PROFILE_CREATION_VIEW} exact>\n                PATH_FOR_PLAYER_PROFILE_CREATION_VIEW\n              </Route>\n              <Route path={PATH_FOR_PLAYER_MATCHES_VIEW} exact>\n                <Centered>\n                  <MatchesListRoute />\n                </Centered>\n              </Route>\n\n              <Route path={PATH_FOR_HOME_VIEW} exact>\n                <HomeMenu />\n              </Route>\n            </Switch>\n          </Grid>\n          <VerticalSpace height=\"55px\" />\n          <Footer />\n        </Centered>\n      </MuiThemeProvider>\n    </Router>\n  );\n}\n\nexport default TourDeFoos;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TourDeFoos from \"./components/pages/TourDeFoos/TourDeFoos\";\nimport \"./index.css\";\n\n//Disable when you want to interact with real REST API server\nif (process.env.REACT_APP_MOCK_WITH_MSW === \"true\") {\n    const {worker} = require(\"./mocks/msw/browser\");\n    worker.start().then(() => console.log(\"MSW worker started!\"));\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <TourDeFoos/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","export  const PATH_BASE_URL : string = \"http://localhost:5000/rest-api\";\n","export * from \"./PlayerProfilesListDto\";\nexport * from \"./PlayerProfileDto\";\nexport * from \"./PlayersProfilesRestApi\";\n"],"sourceRoot":""}