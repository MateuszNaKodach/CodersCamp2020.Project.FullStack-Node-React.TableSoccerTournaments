version: '3.7'
services:
  coderscamp_table_soccer_frontend:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      REACT_APP_REST_API_BASE_URL: http://localhost:5000/rest-api
  coderscamp_table_soccer_backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    ports:
      - 5000:5000
    environment:
      PORT: 5000
      MONGO_HOST: coderscamp_table_soccer_database_mongodb
      POSTGRES_HOST: coderscamp_table_soccer_database_postgres
      EMAIL_SENDER: NODE_MAILER
      MONGO_REPOSITORIES: ENABLED
      TOURNAMENTS_REGISTRATIONS_DATABASE: MONGO
      PLAYERS_MATCHING_MODULE_DATABASE: MONGO
      PLAYER_PROFILES_DATABASE: MONGO
      DOUBLES_TOURNAMENT_DATABASE: MONGO
      MATCH_DATABASE: MONGO
      TOURNAMENTS_TABLES_MODULE_DATABASE: MONGO
      TOURNAMENT_TREE_DATABASE: MONGO
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - coderscamp_table_soccer_database_mongodb
      - coderscamp_table_soccer_database_postgres
      - mailhog
  coderscamp_table_soccer_database_mongodb:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: coderscamp_root_user_mongo
      MONGO_INITDB_ROOT_PASSWORD: coderscamp_root_password
      MONGO_INITDB_DATABASE: coderscamp_table_soccer_tournaments
  #    volumes: # uncomment those lines if you want to save database data between container runs
  #      - mongodb_data_container:/data/db
  coderscamp_table_soccer_database_postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: coderscamp_root_user_postgres
      POSTGRES_PASSWORD: coderscamp_root_password
      POSTGRES_DB: coderscamp_table_soccer_tournaments
  #    volumes: # uncomment those lines if you want to save database data between container runs
  #      - /data/postgres:/data/postgres
  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025
